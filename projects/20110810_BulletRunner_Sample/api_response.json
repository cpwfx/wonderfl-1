{"code":{"thumbnail":"http://wonderfl.net/images/capture/4/4e/4e57/4e573b0ef315300530ce8fd6a0f0816670b6674e_100.jpg?t=1312908065","parent":null,"as3":"package {\n    import flash.geom.*;\n    import flash.text.*;\n    import flash.events.*;\n    import flash.display.*;\n    import flash.ui.Keyboard;\n    import org.si.cml.*;\n    import org.si.cml.extensions.*;\n\n    \n    // simplest sample of whole shmups with BulletRunner\n    [SWF(width=\"300\", height=\"400\", frameRate=\"20\")]\n    public class BulletRunnerSample extends Sprite {\n        // root object\n        private var _root:Sprite;\n        // player object\n        private var _player:Player;\n        // frame counter\n        private var _frameCount:int;\n        // miss count\n        private var _missCount:int;\n        // score\n        private var _score:int;\n        // score board\n        private var tf:TextField;\n        \n        \n        // root CML (stage sequence)\n        // This CML statement creates new enemy every 60frames, and increment rank by 0.1 for every 4 enemies.\n        // \"py-200\"    : set y position of root as -200\n        // \"[\"         : start loops\n        // \"px$??*120\" : set x position of root as \"(rand()*2-1)*120\". the \"$??\" returns (rand()*2-1).\n        // \"n{10}\"     : \"n\" command with sequence parameter of \"10\". this command calls onRootNew()\n        // \"w40-$r*20\" : wait (40-rank*20) frames. \"$r\" refers CMLObject.rank.\n        // \"]4\"        : end loop with 4 times repeating.\n        // \"l$r+=0.1\"  : increment rank by 0.1. \"l\"(let) command executes calculation.\n        // \"]\"         : end loop with repeating infinitely.\n        private var rootCML:String = \"py-200[[px$??*120n{10}w40-$r*20]4l$r+=0.1]\"\n        \n        \n        function BulletRunnerSample() {\n            addEventListener(Event.ADDED_TO_STAGE, onAddedToStage);\n        }\n        \n        \n        private function onAddedToStage(e:Event) : void {\n            removeEventListener(Event.ADDED_TO_STAGE, onAddedToStage);\n\n            // create score board\n            tf = new TextField();\n            tf.autoSize = \"left\";\n            addChild(tf);\n            \n            // draw field graphics and add field\n            Bullet.field.x = 150;\n            Bullet.field.y = 200;\n            Bullet.field.graphics.lineStyle(2,0);\n            Bullet.field.graphics.drawRect(-150, -200, 300, 400);\n            addChild(Bullet.field);\n            \n            // set scope limit of all bullet, \n            // callback function of BulletRunner \"onDestroy\" is called when the object escapes from the scope.\n            BulletRunner.setDefaultScope(-150, -200, 300, 400);\n            \n            // usually, create root object (invisible) first of all.\n            _root = new Sprite();\n            // apply BulletRunner to root object\n            var br:BulletRunner = BulletRunner.apply(_root);\n            // set callback functions\n            br.callbacks = {\"onNew\":onRootNew};\n            // run CML sequence with root object.\n            br.runSequence(rootCML);\n            \n            // create player object and add to field\n            _player = new Player();\n            Bullet.field.addChild(_player);\n\n            // initialize variables\n            _missCount = 0;\n            _score = 0;\n            updateTextField();\n            \n            // enter frame event\n            addEventListener(Event.ENTER_FRAME, onEnterFrame);\n            stage.addEventListener(KeyboardEvent.KEY_DOWN, onKeyDown);\n            stage.addEventListener(KeyboardEvent.KEY_UP,   onKeyUp);\n        }\n        \n        \n        // callback by \"n\" command of root object\n        public function onRootNew(args:Array) : BulletRunner\n        {\n            return Bullet.createNewBullet(args, true);\n        }\n\n        \n        // enter frame event handler\n        public function onEnterFrame(e:Event) : void\n        {\n            var i:int, j:int, imax:int, jmax:int, bullet:Bullet, shot:Shot;\n            \n            _frameCount++;\n            \n            // update target position\n            _player.x += _player.vx;\n            _player.y += _player.vy;\n            BulletRunner.updateTargetPosition(_player.x, _player.y);\n            \n            // create shot\n            if (_player.shooting && (_frameCount&1)) {\n                shot = new Shot();\n                shot.x = _player.x;\n                shot.y = _player.y - 6;\n                Bullet.field.addChild(shot);\n            }\n            \n            // hit check between shots and enemies\n            imax = Shot.instances.length;\n            jmax = Bullet.enemies.length;\n            for (j=0; j<jmax; j++) {\n                bullet = Bullet.enemies[j];\n                for (i=0; i<imax; i++) {\n                    shot = Shot.instances[i];\n                    if (shot.hitTestObject(bullet)) {\n                        bullet.damage(0.2);\n                        shot.destroy();\n                        _score++;\n                        updateTextField();\n                        i--;\n                        imax--;\n                        break;\n                    }\n                }\n            }\n            \n            // hit check between bullets and player\n            if (_player.ignoreHit > 0) {\n                _player.ignoreHit--;\n                _player.alpha = _frameCount & 1;\n            } else {\n                _player.alpha = 1;\n                imax = Bullet.instances.length;\n                for (i=0; i<imax; i++) {\n                    bullet = Bullet.instances[i];\n                    if (bullet.hitTestObject(_player)) {\n                        bullet.disappear();\n                        miss();\n                    }\n                }\n            }\n        }\n        \n        \n        // missed\n        public function miss() : void\n        {\n            _missCount++;\n            _player.ignoreHit = 20;\n            updateTextField();\n        }\n        \n        \n        // update text field\n        public function updateTextField() : void\n        {\n            // you can access rank value by CMLObject.globalRank\n            tf.text = \"SCORE : \" + _score.toString() + \" / MISS : \" + _missCount.toString() + \" / RANK : \" + CMLObject.globalRank.toString();\n        }\n        \n        \n        // key down event handler\n        public function onKeyDown(e:KeyboardEvent) : void \n        {\n            switch (e.keyCode) {\n            case Keyboard.UP:\n                _player.vy = -10;\n                break;\n            case Keyboard.DOWN:\n                _player.vy = 10;\n                break;\n            case Keyboard.LEFT:\n                _player.vx = -10;\n                break;\n            case Keyboard.RIGHT:\n                _player.vx = 10;\n                break;\n            case Keyboard.SPACE:\n                _player.shooting = true;\n                break;\n            }\n        }\n        \n        \n        // key up event handler\n        public function onKeyUp(e:KeyboardEvent) : void \n        {\n            switch (e.keyCode) {\n            case Keyboard.UP:\n            case Keyboard.DOWN:\n                _player.vy = 0;\n                break;\n            case Keyboard.LEFT:\n            case Keyboard.RIGHT:\n                _player.vx = 0;\n                break;\n            case Keyboard.SPACE:\n                _player.shooting = false;\n                break;\n            }\n        }\n    }\n}\n\n\n\n\nimport org.si.cml.*;\nimport org.si.cml.extensions.*;\nimport flash.display.*;\nimport flash.events.*;\n\n// bullet class\nclass Bullet extends Shape {\n    // field\n    static public var field:Sprite = new Sprite();\n    \n    // all instances in the field (shortcut of field.ChildAt())\n    static public var instances:Array = [];\n    \n    // all enemy instances in the field\n    static public var enemies:Array = [];\n\n    // sequence of enemy\n    static public var sequences:Array = [\n        new CMLSequence(\"v0,10i20v~bm5,120   [f4+$r*4{6}w20]3ay0.3\"),         // 5 way barrage, repeat 3 times\n        new CMLSequence(\"v0,10i20v~bm5,0,2   [f7-$r*3{5}w20]3ay0.3\"),         // 5 straight bullets, repeat 3 times\n        new CMLSequence(\"v0,10i20v~bm5,0,0,2 [f8+$r*6{3}w20]3 ay0.3\"),        // 5 rapid-fire cannon, repeat 3 times\n        new CMLSequence(\"v0,10i20v~bm8,15,4,2htx[f7+$r*3{4}w30]2ay0.3\"),      // 5 \"whip\" type barrage, repeat 2 times\n        new CMLSequence(\"v0,10i20v~br5,30,2,4[f8+$r*6{4}w30]2ay0.3\"),         // 5 random bullets, repeat 2 times\n        new CMLSequence(\"v0,10i20v~bm12,360  [f8{6i10v~vd6+$r*8}w30]2ay0.3\"), // 12 round barrage, repeat 2 times\n        new CMLSequence(\"v0,10i20v~bm24,360,0,1bm2,180 f4+$r*8{3}w60 ay0.3\")  // doubled all range barrage\n    ];\n    \n    // bullet runner of this bullet\n    private var _bulletRunner:BulletRunner;\n    \n    // create as first bullet that runs sequence\n    private var _createdAsEnemy:Boolean;\n    \n    // life of this bullet\n    private var _life:Number;\n    \n    \n    function Bullet(radius:int, createAsEnemy:Boolean) {\n        super();\n        \n        // draw bullet graphics\n        graphics.lineStyle(2, 0x404040);\n        graphics.beginFill(0xc0c0c0);\n        graphics.drawCircle(0, 0, radius);\n        graphics.endFill();\n\n        // create as enemy\n        _createdAsEnemy = createAsEnemy;\n    }\n    \n    \n    // disappear\n    public function disappear() : void {\n        // set destruction flag.\n        // the system calls \"onDestroy\" if the destuction flag is set\n        _bulletRunner.destroy(0);\n    }\n    \n    // damage and destroy this bullet\n    public function damage(d:Number) : void {\n        _life -= d;\n        if (_life <= 0) {\n            // set destruction flag.\n            // the system calls \"onDestroy\" if the destuction flag is set\n            _bulletRunner.destroy(1);\n        }\n    }\n    \n    // call back when the object appears on the CML stage\n    public function onCreate(br:BulletRunner) : void {\n        // get bullet runner of this instance\n        _bulletRunner = br;\n        // add to the field when the object appears on the CML stage\n        field.addChild(this);\n        instances.push(this);\n        // run random sequence when this object is created as first bullet\n        if (_createdAsEnemy) {\n            var seqIndex:int = int(Math.random() * sequences.length);\n            br.runSequence(sequences[seqIndex]);\n            enemies.push(this);\n            _life = 1;\n        }\n    }\n\n    // call back in each frame\n    public function onUpdate(br:BulletRunner) : void {\n    }\n\n    // call back when the object escapes from the CML stage or BulletRunner.destroy() is called.\n    public function onDestroy(br:BulletRunner) : void {\n        var exp:Exprosion;\n        // destructionStatus is a reference for the argument of CMLObject.destroy()\n        switch (br.destructionStatus) {\n        case 0: // ussualy escape from stage\n            break;\n        case 1:\n            exp = new Exprosion();\n            exp.x = x;\n            exp.y = y;\n            field.addChild(exp);\n            break;\n        }\n        \n        // remove instance\n        if (_createdAsEnemy) enemies.splice(enemies.indexOf(this), 1);\n        instances.splice(instances.indexOf(this), 1);\n        field.removeChild(this);\n    }\n    \n    // call back when new object is requested by 'n' command.\n    public function onNew(args:Array) : BulletRunner {\n        return createNewBullet(args, false);\n    }\n    \n    // call back when new object is requested by 'f' command.\n    public function onFire(args:Array) : BulletRunner {\n        return createNewBullet(args, false);\n    }\n    \n    // create new bullet \n    static public function createNewBullet(args:Array, createAsEnemy:Boolean) : BulletRunner {\n        // your own instance, \"args\" refers the arguments of sequence\n        var newBullet:Bullet = new Bullet(args[0], createAsEnemy);\n        // create new bullet runner that has your own instance\n        var br:BulletRunner = BulletRunner.apply(newBullet);\n        br.callbacks = newBullet;\n        return br;\n    }\n}\n\n\n// exprosion\nclass Exprosion extends Shape {\n    function Exprosion() {\n        graphics.lineStyle(2, 0x404040);\n        graphics.drawCircle(0, 0, 10);\n        graphics.endFill();        \n        addEventListener(Event.ENTER_FRAME, onEnterFrame);\n        scaleX = scaleY = 0;\n        alpha = 1;\n    }\n    \n    public function onEnterFrame(e:Event) : void {\n        alpha -= 0.1;\n        scaleX += alpha*0.5;\n        scaleY = scaleX;\n        if (alpha < 0) {\n            parent.removeChild(this);\n            removeEventListener(Event.ENTER_FRAME, onEnterFrame);\n        }\n    }\n}\n\n\n\n// player class\nclass Player extends Shape {\n    // velocity\n    public var vx:Number, vy:Number, shooting:Boolean, ignoreHit:int;\n    \n    function Player() {\n        graphics.beginFill(0x606060);\n        graphics.drawPath(Vector.<int>([1,2,2]),Vector.<Number>([0,-6,-6,4,6,4]));\n        graphics.endFill();\n    }\n}\n\n\n\n// player's shot class\nclass Shot extends Shape {\n    // velocity\n    public var vy:Number;\n    \n    // all instances in the field (shortcut of field.ChildAt())\n    static public var instances:Array = [];\n    \n    function Shot() {\n        super();\n        graphics.beginFill(0xc0c0c0);\n        graphics.drawRect(-3, -6, 2, 12);\n        graphics.drawRect( 1, -6, 2, 12);\n        graphics.endFill();\n        instances.push(this);\n        addEventListener(Event.ENTER_FRAME, onEnterFrame);\n        vy = -20;\n    }\n    \n    public function onEnterFrame(e:Event) : void {\n        y += vy;\n        if (y < -200) destroy();\n    }\n    \n    public function destroy() : void {\n        parent.removeChild(this);\n        removeEventListener(Event.ENTER_FRAME, onEnterFrame);\n        instances.splice(instances.indexOf(this), 1);\n    }\n}\n\n","modified_date":1312907792,"compile_ok":"1","created_date":1312907471,"forked_count":"13","license":"MIT","swf":"http://swf.wonderfl.net/swf/usercode/4/4e/4e57/4e573b0ef315300530ce8fd6a0f0816670b6674e.swf","diff":"0","user":{"icon":"http://wonderfl.net/images/icon/2/27/278a/278afc585a0a283d6e1f13f081cfd9c377ab9db2m","name":"keim_at_Si"},"title":"BulletRunner Sample","id":"bb28","favorite_count":"38"},"stat":"ok"}