{"code":{"thumbnail":"http://wonderfl.net/images/capture/7/7a/7af0/7af0cf8f5b74242e7eb21337bfd241a9682d2407_100.jpg?t=1444235593","parent":"cuY4","as3":"// forked from bkzen's Wonderf Score 素材\npackage  \n{\n    import flash.display.*;\n    import flash.text.TextField;\n    import net.wonderfl.utils.WonderflAPI;\n    import flash.events.*;\n    import com.bit101.components.*;\n    /**\n     * ...\n     * @author jc at bkzen\n     */\n    [SWF (backgroundColor = \"0xFFFFFF\", frameRate = \"30\", width = \"465\", height = \"465\")]\n    public class WonderfScoreMain extends Sprite\n    {\n        \n        public function WonderfScoreMain() \n        {\n            if (stage) demo();\n        }\n        \n        \n        /** Setting parameters \n         *  @param api WonderflAPI instance\n         *  @param param parameters\n         */\n        public function initialize(api:WonderflAPI, param:* = null) : void\n        {\n            _api = api;\n            _title = ('title' in param) ? param['title'] : \"SCORE\";\n            _denominator = ('denominator' in param) ? param['denominator'] : 1;\n            _tweetFormat = ('tweet' in param) ? param['tweet'] : \"\";\n            _scoreTitle = ('scoreTitle' in param) ? param['scoreTitle'] : \"SCORE\";\n            _addScoreAfter = ('addScoreAfter' in param) ? param['addScoreAfter'] : \"\";\n            _scoreLength = ('scoreLength' in param) ? param['scoreLength'] : 99;\n            _scoreDescend = ('scoreDescend' in param) ? param['scoreDescend'] : 1;\n            _tabWidth = ('_tabWidth' in param) ? param['_tabWidth'] : 55;\n        }\n        \n        \n        /** Setting score2 */\n        public function score2(bits:int, format:String, title:String) : void\n        {\n            _score2Bits = bits;\n            _score2Format = format;\n            _score2Title = title;\n        }\n        \n        \n        /** Setting score3 */\n        public function score3(bits:int, format:String, title:String) : void\n        {\n            _score3Bits = bits;\n            _score3Format = format;\n            _score3Title = title;\n        }\n        \n        \n        /** Score window */\n        public function makeScoreWindow(score:int, score2:int, score3:int) : DisplayObject\n        {\n            _score = score;\n            _score2 = score2;\n            _score3 = score3;\n            return new ScoreWindow(false);\n        }\n        \n        \n        /** Ranking window */\n        public function makeRankingWindow() : DisplayObject\n        {\n            return new ScoreWindow(true);\n        }\n        \n        \n        /** 基本的な使い方はオリジナルと一緒．ただし、引数が多いのでinitialize()でパラメータ指定する形に変更．*/\n        private function demo() : void {\n            var param:* = {\n                \"tweet\":\"Score Window + [%SCORE%(Lv.%SCORE2%)]\", \n                \"denominator\":10, \n                \"title\":\"Score Window +\"\n            };\n            \n            // initialize() を最初に呼び出す。第２引数でパラメータ設定\n            // Call initialize() first, 2nd argument sets all parameters.\n            initialize(new WonderflAPI(loaderInfo.parameters), param);\n            \n            // score2(),score3() で複数種類のスコア設定．\n            score2(10, \"Lv%SCORE%\", \"Level\");\n            score3(14, \"%SCORE%[pt]\", \"Bonus Point\");\n            \n            // call makeScoreWindow() or makeRankingWindow() \n            new PushButton(this, 0, 0, \"Score\", function(e:Event) : void {\n                addChild(makeScoreWindow(Math.random() * 1000000, Math.random() * 1000, Math.random() * 10000));\n            });\n            new PushButton(this, 0, 20, \"Ranking\", function(e:Event) : void {\n                addChild(makeRankingWindow());\n            });\n        }\n    }\n\n}\nimport com.bit101.components.InputText;\nimport com.bit101.components.Label;\nimport com.bit101.components.PushButton;\nimport com.bit101.components.Style;\nimport com.bit101.components.VScrollBar;\nimport flash.display.DisplayObject;\nimport flash.display.Graphics;\nimport flash.display.Loader;\nimport flash.display.Shape;\nimport flash.display.Sprite;\nimport flash.events.Event;\nimport flash.events.IOErrorEvent;\nimport flash.events.MouseEvent;\nimport flash.filters.DropShadowFilter;\nimport flash.net.navigateToURL;\nimport flash.net.URLLoader;\nimport flash.net.URLRequest;\nimport flash.utils.escapeMultiByte;\nimport net.wonderfl.data.APIScoreData;\nimport net.wonderfl.data.ScoreData;\nimport net.wonderfl.data.WonderflAPIData;\nimport net.wonderfl.utils.WonderflAPI;\nimport org.libspark.betweenas3.BetweenAS3;\nimport org.libspark.betweenas3.easing.Quad;\nimport org.libspark.betweenas3.tweens.IObjectTween;\nimport org.libspark.betweenas3.tweens.ITween;\nimport org.libspark.betweenas3.tweens.ITweenGroup;\nvar _api: WonderflAPI, _score: int, _title: String, _denominator: int, _tweet:String, _tweetFormat:String, _scoreTitle: String, _addScoreAfter: String, _scoreLength: uint, _scoreDescend: uint;\nvar _score2:int, _score2Bits:int = 0, _score2Title: String, _score2Format:String, _tabWidth:Number;\nvar _score3:int, _score3Bits:int = 0, _score3Title: String, _score3Format:String;\n\n/**\n * 閉じられた時に出力されます。\n */\n[Event(name=\"close\", type=\"flash.events.Event\")]\nclass ScoreWindow extends Sprite\n{\n    function ScoreWindow(rankingOnly:Boolean)\n    {\n        if (_tweetFormat) {\n            _tweet = _tweetFormat.replace(/%SCORE%/g, (_score / _denominator)).replace(/%SCORE2%/g, _score2).replace(/%SCORE3%/g, _score3);\n        }\n        _rankingOnly = rankingOnly;\n        if (stage) init();\n        else addEventListener(Event.ADDED_TO_STAGE, init);\n    }\n    private var modalSp:Sprite;\n    private var _rankingOnly:Boolean;\n    \n    private function init(e: Event = null): void \n    {\n        removeEventListener(Event.ADDED_TO_STAGE, init);\n        var window:* = (_rankingOnly) ? new RankingWindow() : new _ScoreWindow();\n        window.closeHandler = onClose;\n        window.x = stage.stageWidth  - window.width  >> 1;\n        window.y = stage.stageHeight - window.height >> 1;\n        addChild(modalSp = new Sprite());\n        var g: Graphics = modalSp.graphics;\n        g.beginFill(0xCCCCCC, 0.5);\n        g.drawRect(0, 0, stage.stageWidth, stage.stageHeight);\n        addChild(window);\n        stage.addEventListener(Event.RESIZE, onResize);\n    }\n    \n    private function onResize(e:Event):void \n    {\n        var g: Graphics = modalSp.graphics;\n        g.clear();\n        g.beginFill(0x333333, 0.3);\n        g.drawRect(0, 0, stage.stageWidth, stage.stageHeight);\n        var i: int;\n        for (i = 0; i < numChildren; i++) \n        {\n            var d: DisplayObject = getChildAt(i);\n            d.x = stage.stageWidth  - d.width  >> 1;\n            d.y = stage.stageHeight - d.height >> 1;\n        }\n    }\n    \n    private function onClose():void \n    {\n        while (numChildren > 0) removeChildAt(0);\n        stage.removeEventListener(Event.RESIZE, onResize);\n        parent.removeChild(this);\n        dispatchEvent(new Event(Event.CLOSE));\n    }\n}\n\nclass _ScoreWindow extends Sprite\n{\n    private var iconLoader: Loader, input: InputText, registBtn: PushButton, closeBtn: PushButton, tweetBtn: PushButton;\n    private var tween: IObjectTween;\n    public var closeHandler: Function;\n    \n    function _ScoreWindow()\n    {\n        alpha = 0;\n        var bg: Shape = new Shape();\n        var g: Graphics = bg.graphics;\n        g.beginFill(0x777777);\n        g.drawRoundRectComplex(0, 0,  280, 180, 5, 5, 5, 5);\n        g.beginFill(0xFFFFFF);\n        g.drawRoundRectComplex(1, 1,  278,  20, 5, 5, 0, 0);\n        g.drawRoundRectComplex(1, 22, 278, 157, 0, 0, 5, 5);\n        bg.filters = [new DropShadowFilter(2, 45, 0, 1, 16, 16)];\n        addChild(bg);\n        BackupStyle.styleSet();\n        new Label(this, 5, 3, _title);\n        iconLoader = new Loader();\n        iconLoader.contentLoaderInfo.addEventListener(Event.COMPLETE, onCompLoadIcon);\n        iconLoader.contentLoaderInfo.addEventListener(IOErrorEvent.IO_ERROR, onIOErrorIcon);\n        iconLoader.visible = false;\n        iconLoader.x = 10, iconLoader.y = 60;\n        addChild(iconLoader);\n        var y:Number = 45;\n        new Label(this, 75,  y, _scoreTitle + \" :\");\n        new Label(this, 150, y, (_score / _denominator).toString() + \" \" + _addScoreAfter);\n        y += 20;\n        if (_score2Bits) {\n            new Label(this, 75,  y, _score2Title + \" :\");\n            new Label(this, 150, y, _score2.toString());\n            y += 20;\n        }\n        if (_score3Bits) {\n            new Label(this, 75,  y, _score3Title + \" :\");\n            new Label(this, 150, y, _score3.toString());\n            y += 20;\n        }\n        new Label(this, 75,  y, \"PLAYER :\");\n        input = new InputText(this, 150, y, _api.viewerDisplayName);\n        iconLoader.load(new URLRequest(_api.viewerIconURL));\n        if (_tweet) tweetBtn = new PushButton(this, 10, 150, \"TWEET\", onClickTweet);\n        registBtn = new PushButton(this, _tweet ? 100 : 35, 150, \"REGISTER\", onClickRegist);\n        closeBtn = new PushButton(this, _tweet ? 190 : 145, 150, \"CANCEL\", onClickCancel);\n        if (tweetBtn) tweetBtn.width = registBtn.width = closeBtn.width = 80;\n        else registBtn.width = closeBtn.width = 100;\n        tween = BetweenAS3.to(this, { alpha: 1 }, 1);\n        tween.play();\n        BackupStyle.styleBack();\n    }\n    \n    private function onIOErrorIcon(e:IOErrorEvent):void \n    {\n        iconLoader.contentLoaderInfo.removeEventListener(Event.COMPLETE, onCompLoadIcon);\n        iconLoader.contentLoaderInfo.removeEventListener(IOErrorEvent.IO_ERROR, onIOErrorIcon);\n    }\n    \n    private function onCompLoadIcon(e:Event):void \n    {\n        iconLoader.contentLoaderInfo.removeEventListener(Event.COMPLETE, onCompLoadIcon);\n        iconLoader.contentLoaderInfo.removeEventListener(IOErrorEvent.IO_ERROR, onIOErrorIcon);\n        iconLoader.scaleX = iconLoader.scaleY = 0.5;\n        iconLoader.visible = true;\n    }\n    \n    private function onClickCancel(e: Event):void \n    {\n        if (tween.isPlaying) tween.stop();\n        tween = BetweenAS3.to(this, { alpha: 0 } );\n        tween.onComplete = close;\n        tween.play();\n        btnDisable();\n    }\n    \n    private function btnDisable(): void\n    {\n        if (tweetBtn) tweetBtn.enabled = false;\n        registBtn.enabled = closeBtn.enabled = false;\n    }\n    \n    private function close(): void\n    {\n        while (numChildren > 0) removeChildAt(0);\n        input = null;\n        if (tweetBtn) tweetBtn.removeEventListener(MouseEvent.CLICK, onClickTweet);\n        registBtn.removeEventListener(MouseEvent.CLICK, onClickRegist);\n        closeBtn.removeEventListener(MouseEvent.CLICK, onClickCancel);\n        tweetBtn = registBtn = closeBtn = null;\n        var f: Function = closeHandler;\n        closeHandler = null;\n        iconLoader.contentLoaderInfo.removeEventListener(Event.COMPLETE, onCompLoadIcon);\n        iconLoader.contentLoaderInfo.removeEventListener(IOErrorEvent.IO_ERROR, onIOErrorIcon);\n        iconLoader.unloadAndStop();\n        iconLoader = null;\n        if (f != null) f();\n        if (parent) parent.removeChild(this);\n    }\n    \n    private function onClickRegist(e: Event):void \n    {\n        if (input.text == \"\") return;\n        btnDisable();\n        var window: RankingWindow = new RankingWindow(input.text);\n        window.x = stage.stageWidth  - window.width  >> 1;\n        window.y = stage.stageHeight - window.height >> 1;\n        window.closeHandler = closeHandler;\n        closeHandler = null;\n        parent.addChild(window);\n        tween.stop();\n        tween = BetweenAS3.to(this, { alpha: 0 }, 0.5);\n        tween.onComplete = close;\n        tween.play();\n    }\n    \n    private function onClickTweet(e: Event):void \n    {\n        navigateToURL(new URLRequest(\"http://twitter.com/share?\" + \n            \"text=\" + escapeMultiByte(_tweet) + \"&url=\" + escapeMultiByte(\"http://wonderfl.net/c/\" + _api.appID)\n        ));\n    }\n}\nclass RankingWindow extends Sprite\n{\n    private var _name: String;\n    private var loader: URLLoader;\n    private var bg: Shape, closeBtn:PushButton, loadingLabel:Label;\n    private var tween: ITween;\n    private var scoreData: APIScoreData;\n    private var list: ScoreList;\n    private var tweetBtn:PushButton;\n    public var closeHandler: Function;\n    function RankingWindow(name:String = null)\n    {\n        BackupStyle.styleSet();\n        bg = new Shape();\n        var g: Graphics = bg.graphics;\n        g.beginFill(0x777777);\n        g.drawRoundRectComplex(0, 0,  360, 340, 5, 5, 5, 5);\n        g.beginFill(0xFFFFFF);\n        g.drawRoundRectComplex(1, 1,  358, 20,  5, 5, 0, 0);\n        g.drawRoundRectComplex(1, 22, 358, 317, 0, 0, 5, 5);\n        g.beginFill(0x777777);\n        g.drawRect(6, 27, 348, 282);\n        g.beginFill(0xFFFFFF);\n        g.drawRect(7, 28, 346, 280);\n        bg.filters = [new DropShadowFilter(2, 45, 0, 1, 16, 16, 1)];\n        addChild(bg);\n        new Label(this, 5, 3, _title + \" RANKING\");\n        var showTweetButton:Boolean = (_tweet && name);\n        if (showTweetButton) tweetBtn = new PushButton(this, 75, 314, \"TWEET\", onClickTweet);\n        closeBtn = new PushButton(this, showTweetButton ? 185 : 130, 314, \"CLOSE\", onClickClose);\n        loadingLabel = new Label(this, 150, 160, \"NOW LOADING...\");\n        BackupStyle.styleBack();\n        \n        alpha = 0;\n        tween = BetweenAS3.to(this, {alpha: 1}, 0.5);\n        tween.onComplete = check;\n        tween.play();\n        addEventListener(Event.ENTER_FRAME, loadingLoop);\n        loader = new URLLoader();\n        if (name) {\n            _name = encode(name, _score2, _score3);\n            loader.addEventListener(Event.COMPLETE, onCompSaveScore);\n            var urlReq: URLRequest = _api.apiScorePostObject(_score, _name);\n            urlReq.url = WonderflAPI.API_SCORE_SET.replace(\"%ID%\", _api.appID);\n            loader.load(urlReq);\n        } else {\n            loader.addEventListener(Event.COMPLETE, onCompLoadScore);\n            loader.load(_api.apiScoreGet(_scoreLength, _scoreDescend));\n        }\n    }\n\n    private function onClickTweet(e: Event):void \n    {\n        navigateToURL(new URLRequest(\"http://twitter.com/share?\" + \n            \"text=\" + escapeMultiByte(_tweet) + \"&url=\" + escapeMultiByte(\"http://wonderfl.net/c/\" + _api.appID)\n        ));\n    }\n    \n    private function onClickClose(e: Event):void \n    {\n        removeEventListener(Event.ENTER_FRAME, loadingLoop);\n        closeBtn.removeEventListener(MouseEvent.CLICK, onClickClose);\n        try { loader.close(); }\n        catch (err: Error) { }\n        \n        if (tween && tween.isPlaying) tween.stop();\n        tween = BetweenAS3.to(this, { alpha: 0 }, 0.5);\n        tween.onComplete = close;\n        tween.play();\n    }\n    \n    private function close():void \n    {\n        while (numChildren > 0) removeChildAt(0);\n        var f: Function = closeHandler;\n        closeHandler = null;\n        list.clear();\n        if (loader) \n        {\n            loader.removeEventListener(Event.COMPLETE, onCompLoadScore);\n            loader.removeEventListener(Event.COMPLETE, onCompSaveScore);\n        }\n        bg = null, closeBtn = null, loadingLabel = null, list = null;\n        if (f != null) f();\n        dispatchEvent(new Event(Event.CLOSE));\n    }\n    \n    private function check():void \n    {\n        if (scoreData && alpha == 1) \n        {\n            removeEventListener(Event.ENTER_FRAME, loadingLoop);\n            removeChild(loadingLabel);\n            addChild(list = new ScoreList(7, 28, 346, 280));\n            list.add(scoreData.scores, _name, _score)\n        }\n    }\n    \n    private function loadingLoop(e:Event):void \n    {\n        loadingLabel.visible = !loadingLabel.visible;\n    }\n    \n    private function onCompSaveScore(e:Event):void \n    {\n        loader.removeEventListener(Event.COMPLETE, onCompSaveScore);\n        var res: WonderflAPIData = new WonderflAPIData(JSON.parse(loader.data));\n        if (res.isOK)\n        {\n            loader = new URLLoader();\n            loader.addEventListener(Event.COMPLETE, onCompLoadScore);\n            loader.load(_api.apiScoreGet(_scoreLength, _scoreDescend));\n        }\n        else \n        {\n            removeEventListener(Event.ENTER_FRAME, loadingLoop);\n            loadingLabel.visible = true;\n            loadingLabel.text = \"Score Save Error : \" + res.stat + \" : \" + res.message;\n        }\n    }\n    \n    private function onCompLoadScore(e:Event):void \n    {\n        loader.removeEventListener(Event.COMPLETE, onCompLoadScore);\n        scoreData = new APIScoreData(JSON.parse(loader.data));\n        if (scoreData.isOK)\n        {\n            check();\n        }\n        else \n        {\n            removeEventListener(Event.ENTER_FRAME, loadingLoop);\n            loadingLabel.visible = true;\n            loadingLabel.text = \"Score Load Error\" + scoreData.stat + \" : \" + scoreData.message;\n            scoreData = null;\n            if (tweetBtn) tweetBtn.removeEventListener(MouseEvent.CLICK, onClickTweet); \n            tweetBtn = null;\n        }\n    }\n}\nclass ScoreList extends Sprite\n{\n    private var container: Sprite;\n    private var containerMask: Shape;\n    private var scrollBar: VScrollBar;\n    private var scoreLength: int;\n    private var myScoreLCIndex: int;\n    private var listChildren: Vector.<ListChild>;\n    private var myScoreLC: ListChild;\n    private var scrollValue: int;\n    private var isClear: Boolean;\n    private var highLightEffect:Shape;\n    private var targetY: int;\n    private var tween:ITweenGroup;\n    private var w: int, h: int;\n    function ScoreList(x: int, y: int, w: int, h: int)\n    {\n        this.x = x, this.y = y, this.w = w - 10, this.h = h;\n        addChild(container = new Sprite());\n        addChild(containerMask = new Shape());\n        container.mask = containerMask;\n        var g: Graphics = containerMask.graphics;\n        g.beginFill(0xFFFFFF), g.drawRect(0, 0, this.w, h);\n        scrollBar = new VScrollBar(this, this.w, 0);\n        scrollBar.height = h;\n    }\n    \n    public function add(scores: Vector.<ScoreData>, name: String, score: int): void \n    {\n        scoreLength = scores.length, myScoreLCIndex = -1;\n        listChildren = new Vector.<ListChild>(scoreLength, true);\n        for ( var i: int = 0; i < scoreLength; i++ )\n        {\n            var s: ScoreData = scores[i];\n            if (s.name == name && s.score == score) myScoreLCIndex = i;\n            var listChild:ListChild = new ListChild(w, 21, _tabWidth, i + 1, decode(s));\n            listChildren[i] = listChild;\n            listChild.y = 20 * (i - (myScoreLCIndex < 0 ? 0 : 1));\n            if (myScoreLCIndex == i) myScoreLC = listChild;\n            else container.addChild(listChild);\n        }\n        var setScrollBar: Function = function(): void\n        {\n            scrollBar.setThumbPercent(13 / (scoreLength - 1));\n            var max: int = scoreLength - 1 - 13;\n            if (max < 0) max = 0;\n            var now: int = myScoreLCIndex - 13;\n            if (now < 0) now = 0;\n            scrollBar.setSliderParams(0, max, now);\n            scrollValue = now;\n            scrollBar.addEventListener(Event.CHANGE, onChangeScroll);\n            tween = null;\n            if (isClear) clear();\n        }\n        if (myScoreLC) \n        {\n            highLightEffect = new Shape();\n            var g: Graphics = highLightEffect.graphics;\n            g.beginFill(0x80FFFF);\n            g.drawRect(- w >> 1, - 10, w, 21);\n            myScoreLC.scaleX = myScoreLC.scaleY = 1.5;\n            myScoreLC.alpha = 0;\n            myScoreLC.x = w  - myScoreLC.width  >> 1;\n            highLightEffect.x = w >> 1;\n            if (myScoreLCIndex > 13) \n            {\n                // 画面をスクロール\n                myScoreLC.y = (targetY = 13 * 20) + (20 - myScoreLC.height >> 1);\n                container.y = (13 - myScoreLCIndex) * 20;\n            }\n            else \n            {\n                myScoreLC.y = (targetY = myScoreLCIndex * 20) + (20 - myScoreLC.height >> 1);\n            }\n            highLightEffect.y = targetY + 10;\n            addChild(myScoreLC);\n            var arr: Array = [];\n            if (myScoreLCIndex != scoreLength - 1)\n            {\n                for (i = myScoreLCIndex + 1; i < scoreLength; i++ )\n                {\n                    arr.push(BetweenAS3.to(listChildren[i], { y: listChildren[i].y + 20 }, 0.5, Quad.easeInOut));\n                }\n            }\n            arr.push(BetweenAS3.to(myScoreLC, { x: 0, y: targetY, scaleX: 1, scaleY:1 }, 0.5, Quad.easeOut));\n            tween = BetweenAS3.serial(\n                BetweenAS3.to(myScoreLC, { alpha: 1 }, 0.5),\n                BetweenAS3.parallelTweens(arr),\n                BetweenAS3.addChild(highLightEffect, this),\n                BetweenAS3.to(highLightEffect, { alpha: 0, scaleX: 1.3, scaleY: 1.3 }, 0.5, Quad.easeOut),\n                BetweenAS3.parallel(\n                    BetweenAS3.removeFromParent(highLightEffect), BetweenAS3.removeFromParent(myScoreLC)\n                )\n            );\n            tween.onComplete = function(): void\n            {\n                tween.onComplete = null;\n                tween = null;\n                myScoreLC.y = myScoreLCIndex * 20;\n                container.addChildAt(myScoreLC, myScoreLCIndex);\n                setScrollBar();\n            }\n            tween.play();\n        }\n        else \n        {\n            setScrollBar();\n        }\n    }\n    \n    public function clear():void \n    {\n        if (tween)\n        {\n            isClear = true;\n        }\n        else \n        {\n            while (numChildren > 0) removeChildAt(0);\n            while (container.numChildren > 0) container.removeChildAt(0);\n            for (var i: int = 0; i < scoreLength; i ++ ) listChildren[i].clear();\n            container.mask = null;\n            container = null;\n            containerMask = null;\n            scrollBar = null;\n            myScoreLC = null;\n            highLightEffect = null;\n        }\n    }\n    \n    private function onChangeScroll(e:Event):void \n    {\n        if (scrollValue == scrollBar.value) return;\n        scrollValue = scrollBar.value;\n        container.y = - scrollValue * 20;\n    }\n}\nclass ListChild extends Sprite\n{\n    private var indexLabel: Label;\n    private var label: Label;\n    private var scoreLabel: Label;\n    private var scoreLabel2: Label;\n    private var scoreLabel3: Label;\n    function ListChild(w:int, h:int, tabWidth:int, index:int, scoreData:*)\n    {\n        BackupStyle.styleSet();\n        var g: Graphics = graphics;\n        g.beginFill(0xCCCCCC);\n        g.drawRect(0, 0, w, h);\n        g.drawRect(1, 1, w - 2, h - 2);\n        g.beginFill(0xFFFFFF);\n        g.drawRect(1, 1, w - 2, h - 2);\n        indexLabel = new Label(this, 5, 0, String(index));\n        label = new Label(this, 25, 0, scoreData.name);\n        var align:Number = w - 5;\n        if (\"score3\" in scoreData) {\n            scoreLabel3 = new Label(this, 0, 0, scoreData.score3String);\n            scoreLabel3.draw();\n            scoreLabel3.x = align - scoreLabel3.width;\n            align -= tabWidth;\n        }\n        if (\"score2\" in scoreData) {\n            scoreLabel2 = new Label(this, 0, 0, scoreData.score2String);\n            scoreLabel2.draw();\n            scoreLabel2.x = align - scoreLabel2.width;\n            align -= tabWidth;\n        }\n        scoreLabel = new Label(this, 0, 0, scoreData.scoreString);\n        scoreLabel.draw();\n        scoreLabel.x = align - scoreLabel.width;\n        BackupStyle.styleBack();\n    }\n    \n    public function clear():void \n    {\n        graphics.clear();\n        while (numChildren > 0) removeChildAt(0);\n        indexLabel = null;\n        label = null;\n        scoreLabel = null;\n    }\n}\nclass BackupStyle\n{\n    public static var BACKGROUND: uint = 0xCCCCCC;\n    public static var BUTTON_FACE: uint = 0xFFFFFF;\n    public static var INPUT_TEXT: uint = 0x333333;\n    public static var LABEL_TEXT: uint = 0x666666;\n    public static var DROPSHADOW: uint = 0x000000;\n    public static var PANEL: uint = 0xF3F3F3;\n    public static var PROGRESS_BAR: uint = 0xFFFFFF;\n    \n    public static var embedFonts: Boolean = true;\n    public static var fontName: String = \"PF Ronda Seven\";\n    public static var fontSize: Number = 8;\n    \n    private static var b: Object;\n    \n    public static function styleSet(): void\n    {\n        b = {\n            BACKGROUND:        Style.BACKGROUND,    BUTTON_FACE:    Style.BUTTON_FACE, \n            INPUT_TEXT:        Style.INPUT_TEXT,    LABEL_TEXT:        Style.LABEL_TEXT, \n            DROPSHADOW:        Style.DROPSHADOW,    PANEL:            Style.PANEL, \n            PROGRESS_BAR:    Style.PROGRESS_BAR,    embedFonts:        Style.embedFonts, \n            fontName:        Style.fontName,        fontSize:        Style.fontSize\n        };\n        Style.BACKGROUND = BACKGROUND,         Style.BUTTON_FACE = BUTTON_FACE;\n        Style.INPUT_TEXT = INPUT_TEXT,         Style.LABEL_TEXT = LABEL_TEXT;\n        Style.DROPSHADOW = DROPSHADOW,         Style.PANEL = PANEL;\n        Style.PROGRESS_BAR = PROGRESS_BAR,     Style.embedFonts = embedFonts;\n        Style.fontName = fontName,             Style.fontSize = fontSize;\n    }\n    \n    public static function styleBack(): void\n    {\n        Style.BACKGROUND = b[\"BACKGROUND\"], Style.BUTTON_FACE = b[\"BUTTON_FACE\"];\n        Style.INPUT_TEXT = b[\"INPUT_TEXT\"], Style.LABEL_TEXT = b[\"LABEL_TEXT\"];\n        Style.DROPSHADOW = b[\"DROPSHADOW\"], Style.PANEL = b[\"PANEL\"];\n        Style.PROGRESS_BAR = b[\"PROGRESS_BAR\"], Style.embedFonts = b[\"embedFonts\"];\n        Style.fontName = b[\"fontName\"], Style.fontSize = b[\"fontSize\"];\n    }\n}\n\nvar b64Table:String = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n\nfunction encode(name:String, score2:int, score3:int) : String {\n    if (_score2Bits == 0 && _score3Bits == 0) return name;\n    var data:int = ((score2 & ((1<<_score2Bits)-1)) << _score3Bits) | (score3 & ((1<<_score3Bits)-1)), i:int, \n        dstr:String = \"\", p:int=0;\n    for (i=0; i<5; i++) {\n        p ^= data & 63;\n        dstr += b64Table.charAt(data & 63);\n        data >>= 6;\n    }\n    dstr += b64Table.charAt(p);\n    return name + dstr;\n}\n\nfunction decode(s:ScoreData) : * {\n    var res:* = {\"name\":s.name, \"score\":s.score, \"scoreString\" : (s.score / _denominator).toString() + \" \" + _addScoreAfter};\n    if (_score2Bits == 0 && _score3Bits == 0) return res;\n    res[\"name\"] = s.name.substr(0, s.name.length-6);\n    var dstr:String = s.name.substr(-6), data:int=0, p:int=0, i:int, idx:int;\n    p = b64Table.indexOf(dstr.charAt(5));\n    for (i=4; i>=0; --i) {\n        idx = b64Table.indexOf(dstr.charAt(i));\n        if (idx == -1) return res;\n        data = (data << 6) | idx;\n        p ^= idx;\n    }\n    if (p != 0) return res;\n    if (_score2Bits) {\n        res[\"score2\"] = p = (data>>_score3Bits) & ((1<<_score2Bits)-1);\n        res[\"score2String\"] = _score2Format.replace('%SCORE%', p.toString());\n    }\n    if (_score3Bits) {\n        res[\"score3\"] = p = data & ((1<<_score3Bits)-1);\n        res[\"score3String\"] = _score3Format.replace('%SCORE%', p.toString());\n    }\n    return res;\n}\n","modified_date":1444235579,"compile_ok":"1","created_date":1314902412,"forked_count":"0","license":"MIT","swf":"http://swf.wonderfl.net/swf/usercode/7/7a/7af0/7af0cf8f5b74242e7eb21337bfd241a9682d2407.swf","diff":"213","user":{"icon":"http://wonderfl.net/images/icon/2/27/278a/278afc585a0a283d6e1f13f081cfd9c377ab9db2m","name":"keim_at_Si"},"title":"Wonderf Score 素材 +","id":"hxAb","favorite_count":"11"},"stat":"ok"}