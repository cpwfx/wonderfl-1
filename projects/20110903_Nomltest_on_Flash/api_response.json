{"code":{"thumbnail":"http://wonderfl.net/images/capture/4/48/4882/488247371cf324e228b6e3e5f34d4f6348aab77b_100.jpg?t=1444235636","parent":null,"as3":"package {\n    import flash.display.*;\n    import flash.events.*;\n    import org.si.b3.*;\n\n    [SWF(width=\"465\", height=\"465\", frameRate=\"30\")]\n    public class main extends Sprite {\n        function main() {\n            resManager = new ResourceManager(onResourceLoaded, loaderInfo.parameters);\n            scrManager = new ScoreManager();\n            actManager = new ActorManager();\n        }\n        \n        public function onResourceLoaded() : void {\n            mc = new CMLMovieClip(this, 8, 8, 450, 450, 0xffffff, true, setup);\n            mc.control.map(CMLMovieClip.KEY_ESCAPE, \"Q\");\n            mc.scene.register(\"title\",     new TitleScene());\n            mc.scene.register(\"main\",      new MainScene());\n            mc.scene.register(\"gameover\",  new GameoverScene());\n            mc.scene.id = \"title\";\n        }\n        \n        public function setup() : void {\n            resManager.sionDriver.bpm = 152;\n            resManager.sionDriver.play();\n        }\n    }\n}\n\n\n// import --------------------------------------------------------------------------------\nimport flash.net.*;\nimport flash.geom.*;\nimport flash.events.*;\nimport flash.display.*;\nimport flash.filters.*;\nimport flash.utils.*;\nimport org.si.sion.*;\nimport org.si.sion.utils.soundloader.*;\nimport org.si.cml.*;\nimport org.si.cml.extensions.*;\nimport org.si.cml.namespaces.*;\nimport org.si.b3.*;\nimport net.wonderfl.utils.WonderflAPI;\n\n// constant variables --------------------------------------------------------------------------------\nconst extendScore:int = 200000;\nconst defaultLife:int = 3;\nconst RANKING_WINDOW_URL:String = \"http://swf.wonderfl.net/swf/usercode/7/7a/7af0/7af0cf8f5b74242e7eb21337bfd241a9682d2407.swf\";\nconst checkPolicyFile:Boolean = true;\n//const CHARA_MAP_URL :String = \"charactor.png\";\nconst CHARA_MAP_URL :String = \"http://assets.wonderfl.net/images/related_images/e/e4/e488/e4889d7b98486f0edf339bb45c0a4114255988c2\";\n//const SOUND_FONT_URL:String = \"sound.png\";\nconst SOUND_FONT_URL:String = \"http://assets.wonderfl.net/images/related_images/a/aa/aa9a/aa9a00df008e71a100500b5c90da9b71734af5e8\";\n\n// global instance --------------------------------------------------------------------------------\nvar mc:CMLMovieClip;\nvar resManager:ResourceManager;\nvar scrManager:ScoreManager;\nvar actManager:ActorManager;\n\n// Scenes -------------------------------------------------------------------------------- \nclass TitleScene {\n    private var menuIndex:int, startLevel:int;\n    private var menu:Array = [\"Press [Z] Key To Start\", \"Show Net Ranking\", \"Clear Cookie\", \"Debug Mode\"];\n    private var anim:Array = [0, 4, 7, 9, 10, 9, 7, 4];\n    public function enter() : void {\n        mc.fps.reset();\n        menuIndex = 0;\n        startLevel = 0;\n        scrManager.reset(true);\n        actManager.reset();\n        scrManager.debugMode = false;\n    }\n    \n    public function update() : void {\n        if (!mc.pause) {\n            if (mc.control.isHitted(CMLMovieClip.KEY_BUTTON0)) {\n                if (menuIndex == 2) {\n                    scrManager.clearCookie();\n                    scrManager.reset(true);\n                } else if (menuIndex == 1) {\n                    mc.pause = true;\n                    resManager.showRanking(function(e:Event) : void { mc.pause = false; });\n                } else mc.scene.id = \"main\";\n            } else if (mc.control.isHitted(CMLMovieClip.KEY_RIGHT)) {\n                if (--menuIndex == -1) menuIndex = menu.length-1;\n                resManager.sionDriver.noteOn(67, resManager.beep, 1);\n            } else if (mc.control.isHitted(CMLMovieClip.KEY_LEFT)) {\n                if (++menuIndex == menu.length) menuIndex = 0;\n                resManager.sionDriver.noteOn(67, resManager.beep, 1);\n            } else {\n                startLevel -= mc.control.y * 5;\n                if (startLevel < 0) startLevel = 0;\n                else if (startLevel > 250) startLevel = 250;\n            }\n        }\n    }\n    \n    public function draw() : void {\n        var menuString:String = menu[menuIndex], width:int = menuString.length * 8, \n            frameCount:int = mc.fps.totalFrame;\n        mc.copyPixels(resManager.background, 0, 0, 450, 450, -225, -225);\n        scrManager.draw();\n        resManager.print(-166, -56, \"NOMLTEST FL\", resManager.lfonttex, 32);\n        resManager.print(-width, 160, menuString, resManager.fonttex, 16);\n        resManager.print(-196-anim[frameCount&7], 160, \"{\", resManager.fonttex, 16);\n        resManager.print( 180+anim[frameCount&7], 160, \"}\", resManager.fonttex, 16);\n        resManager.print(-128, 90, \"START LEVEL : \" + startLevel.toString(), resManager.fonttex, 16); \n    }\n    \n    public function exit() : void {\n        scrManager.startLevel = startLevel;\n        scrManager.debugMode = (menuIndex == 3);\n    }\n}\n\nclass MainScene {\n    public function enter() : void {\n        mc.fps.reset();\n        scrManager.reset(false);\n        actManager.reset();\n        actManager.start();\n        resManager.sionDriver.play(resManager.bgm);\n        resManager.sionDriver.playSound(6,1,0,0,2);\n    }\n    \n    public function update() : void {\n        scrManager.update();\n        actManager.update();\n        if (mc.control.getPressedFrame(CMLMovieClip.KEY_ESCAPE) > 15) {\n            resManager.sionDriver.play();\n            mc.scene.id = \"title\";\n        }\n    }\n    \n    public function draw() : void {\n        var f:int, t:Number;\n        mc.copyPixels(resManager.background, 0, 0, 450, 450, -225, -225);\n        scrManager.draw();\n        actManager.draw();\n        if (mc.fps.totalFrame < 90) {\n            f = mc.fps.totalFrame;\n            if (f < 70) {\n                t = (f<50) ? ((40-f) * (40-f) - 100) * 0.2 : 0;\n                resManager.print(-102-t, -32, \"ARE YOU\", resManager.lfonttex, 32);\n                resManager.print(-102+t,   0, \"READY ?\", resManager.lfonttex, 32);\n            } else {\n                resManager.print(-70, -16, \"GO !!\", resManager.lfonttex, 32);\n            }\n        }\n    }\n\n    public function exit() : void {}\n}\n\nclass GameoverScene {\n    private var referenceRecord:Boolean;\n    public function enter() : void {\n        referenceRecord = (scrManager.delayedFrames > mc.fps.totalFrame*0.1);\n        mc.fps.reset();\n        resManager.sionDriver.play(resManager.gameover);\n        resManager.sionDriver.playSound(2,1,0,0,2);\n    }\n    \n    public function update() : void {\n        if (!mc.pause) {\n            scrManager.update();\n            actManager.update();\n            if (mc.fps.totalFrame > 60 && mc.control.isHitted(CMLMovieClip.KEY_BUTTON0)) {\n                if (!referenceRecord && scrManager.checkResult()) {\n                    mc.pause = true;\n                    resManager.registerRanking(function(e:Event) : void {\n                        mc.pause = false;\n                        mc.scene.id = \"title\";\n                    });\n                } else mc.scene.id = \"title\";\n            }\n        }\n    }\n    \n    public function draw() : void {\n        mc.copyPixels(resManager.background, 0, 0, 450, 450, -225, -225);\n        scrManager.draw();\n        actManager.draw();\n        resManager.print(-136, -32, \"GAME OVER\", resManager.lfonttex, 32);\n        if (referenceRecord) resManager.print(-96, 16, \"REFERENCE=RECORD\", resManager.numtex, 12, 48);\n    }\n    \n    public function exit() : void {}\n}\n\n// Managers --------------------------------------------------------------------------------\nclass ResourceManager {\n    public var bgangle:Number = -90, bgcolor1:uint = 0xf0f0ff, bgcolor2:uint = 0xb0b0cf;\n    public var sionDriver:SiONDriver = new SiONDriver();\n    public var damageColt:ColorTransform = new ColorTransform(1,1,1,1,-128,-128,-128,0);\n    public var playerTexture:CMLMovieClipTexture, shotTexture:CMLMovieClipTexture;\n    public var fonttex:CMLMovieClipTexture, lfonttex:CMLMovieClipTexture;\n    public var numtex:CMLMovieClipTexture, lnumtex:CMLMovieClipTexture;\n    public var scoreTextures:Array, explosionTextures:Array, enemyTextures:Array, bulletTextures:Array, enemyColors:Array;\n    public var lifeUpTexture:CMLMovieClipTexture;\n    public var background:BitmapData = new BitmapData(450, 450, false, 0xffffff);\n    public var bgm:SiONData, gameover:SiONData, sequences:*, beep:SiONVoice;\n    public var charactorMap:BitmapData, stageSequence:CMLSequence;\n    public var groupID:Array = [0, 0, 0, 3, 3, 3, 6, 7, 7, 9, 10, 9, 0, 13, 0];\n    public var shotSeq:Array, groupSeq:Array, enemySeq:Array;\n    public var onResourceLoaded:Function, rankingMaker:*, loaderInfoParameters:*;\n    function ResourceManager(onResourceLoaded:Function, loaderInfoParameters:*) {\n        this.loaderInfoParameters = loaderInfoParameters;\n        // Loader --------------------------------------------------\n        var loader:SoundLoader = new SoundLoader();\n        this.onResourceLoaded = onResourceLoaded;\n        loader.setURL(new URLRequest(CHARA_MAP_URL), \"cmap\", \"img\", checkPolicyFile);\n        loader.setURL(new URLRequest(SOUND_FONT_URL), \"sample\", \"ssfpng\", checkPolicyFile);\n        loader.setURL(new URLRequest(RANKING_WINDOW_URL), \"ranking\", \"swf\");\n        //loader.setURL(new URLRequest(\"nomltest.mml\"), \"bgm\", \"txt\");\n        //loader.setURL(new URLRequest(\"gameover.mml\"), \"gameover\", \"txt\");\n        //loader.setURL(new URLRequest(\"script.cml\"), \"script\", \"txt\");\n        loader.addEventListener(Event.COMPLETE, _onComplete);\n        loader.loadAll();\n    }\n    private function _onComplete(e:Event) : void {\n        var data:* = SoundLoader(e.target).hash, bmp:BitmapData = new BitmapData(128, 128, true, 0xffffffff),\n            red:Array=[0.7,0.4,0.4], grn:Array=[0.4,0.7,0.4], blu:Array=[0.4,0.4,0.7], \n            i:int, j:int, c:int, mat:Matrix = new Matrix(), t:CMLMovieClipTexture, bd:BitmapData, lbl:String;\n        \n        // CannonML --------------------------------------------------\n        CMLObject.setGlobalRankRange(0, 999);\n        CMLSequence.registerUserCommand(\"rungroup\",   _onRunGroup, 1);\n        CMLSequence.registerUserCommand(\"groupbonus\", _onGroupBonus, 1);\n        \n        // Textures --------------------------------------------------\n        charactorMap = data[\"cmap\"].bitmapData;\n        bmp.copyChannel(charactorMap, bmp.rect, bmp.rect.topLeft, 1, 8);\n        playerTexture = newTexture(bmp, 16, 0, 16, 16, 1, 2, blu, true, true);\n        shotTexture   = newTexture(bmp, 56, 0,  8, 16, 1, 2, [0.7, 0.6, 0.4], false, false);\n        fonttex  = newTexture(bmp, 0, 64, 8, 8, 96, 2, [0.375, 0.375, 0.5], true, false);\n        lfonttex = newTexture(bmp, 0, 64, 8, 8, 96, 4, [0.375, 0.375, 0.5], true, false);\n        numtex   = newTexture(bmp, 0, 112, 6, 6, 42, 2, [0.375, 0.375, 0.375], false, false);\n        lnumtex  = newTexture(bmp, 0, 112, 6, 6, 42, 4, [0.75, 0.25, 0.25],    false, false);\n        // text\n        scoreTextures = [];\n        for (i=0; i<=50; i++) scoreTextures.push(renderText(i.toString()+\"0\", numtex));\n        for (i=1; i<4; i++) scoreTextures[i*100] = renderText(i.toString()+\"000\", lnumtex);\n        lifeUpTexture = renderText(\"1UP\", lnumtex);\n        enemyTextures = [];\n        enemyColors = [];\n        // enemies\n        for (i=0; i<4; i++) {\n            enemyTextures.push(newTexture(bmp, i*16+64, 0, 16, 16, 1, 2, blu, true, true));\n            enemyTextures.push(newTexture(bmp, i*16+64, 0, 16, 16, 1, 2, grn, true, true));\n            enemyTextures.push(newTexture(bmp, i*16+64, 0, 16, 16, 1, 2, red, true, true));\n            enemyColors.push(0x9999c3, 0x99c399, 0xc39999);\n        }\n        enemyTextures.push(newTexture(bmp,  64, 0, 16, 16, 1, 4, blu, true, true));\n        enemyTextures.push(newTexture(bmp,  80, 0, 16, 16, 1, 4, grn, true, true));\n        enemyTextures.push(newTexture(bmp,  96, 0, 16, 16, 1, 4, red, true, true));\n        enemyTextures.push(newTexture(bmp, 112, 0, 16, 16, 1, 4, [0.7, 0.7, 0.4], true, true));\n        enemyColors.push(0x9999c3, 0x99c399, 0xc39999, 0xc3c399);\n        // explosions\n        explosionTextures = [];\n        explosionTextures.push(newTexture(bmp, 0, 32, 16, 16, 16, 4, blu, true, false));\n        explosionTextures.push(newTexture(bmp, 0, 32, 16, 16, 16, 4, grn, true, false));\n        explosionTextures.push(newTexture(bmp, 0, 32, 16, 16, 16, 4, red, true, false));\n        for (i=1; i<4; i++) explosionTextures.push(explosionTextures[0], explosionTextures[1], explosionTextures[2]);\n        explosionTextures.push(newTexture(bmp, 0, 32, 16, 16, 16, 6, blu, true, false));\n        explosionTextures.push(newTexture(bmp, 0, 32, 16, 16, 16, 6, grn, true, false));\n        explosionTextures.push(newTexture(bmp, 0, 32, 16, 16, 16, 6, red, true, false));\n        explosionTextures.push(newTexture(bmp, 0, 32, 16, 16, 16, 6, [0.7, 0.7, 0.4], true, false));\n        // bullets\n        bulletTextures = [\n            newTexture(bmp,  0, 16, 8, 8, 6, 2, blu, true, false),\n            newTexture(bmp,  0, 24, 8, 8, 8, 2, grn, true, false),\n            newTexture(bmp, 64, 16, 8, 8, 8, 2, red, true, false),\n            newTexture(bmp, 64, 24, 8, 8, 8, 2, blu, true, false),\n            newTexture(bmp, 64, 24, 8, 8, 8, 2, grn, true, false),\n            newTexture(bmp, 64, 24, 8, 8, 8, 2, red, true, false),\n            newTexture(bmp, 48, 16, 8, 8, 2, 2, red, true, false)\n        ];\n            \n        // Background --------------------------------------------------\n        var drawer:Shape = new Shape, g:Graphics = drawer.graphics;\n        mat.createGradientBox(450, 450, (bgangle+90)*0.017453292519943295, 0, 0);\n        g.clear();\n        g.beginGradientFill(GradientType.LINEAR, [bgcolor1, bgcolor2], [1,1], [0,255], mat);\n        g.drawRect(0, 0, 720, 480);\n        g.endFill();\n        background.draw(drawer);\n        g.lineStyle(2, 0, 0.125);\n        for (i=0; i<=450; i+=50) {\n            g.moveTo(0,i);\n            g.lineTo(450,i);\n            g.moveTo(i,0);\n            g.lineTo(i,450);\n        }\n        background.draw(drawer);\n        \n        // Sound --------------------------------------------------\n        beep = new SiONVoice(0, 0, 63, 36, 4, 0, 0, -4);\n        sionDriver.noteOnExceptionMode = SiONDriver.NEM_IGNORE;\n        sionDriver.setSamplerTable(0, data[\"sample\"].samplerTables[0]);\n        //bgm = sionDriver.compile(data[\"bgm\"]);\n        bgm = sionDriver.compile(mmlMain);\n        //gameover = sionDriver.compile(data[\"gameover\"]);\n        gameover = sionDriver.compile(mmlGameOver);\n        \n        // Sequences --------------------------------------------------\n        //stageSequence = new CMLSequence(data[\"script\"]);\n        stageSequence = new CMLSequence(cmlScript);\n        sequences = stageSequence.childSequence;\n        shotSeq = [sequences[\"S1\"],sequences[\"S2\"],sequences[\"S3\"]];\n        groupSeq = [];\n        enemySeq = [];\n        for (i=0; i<32; i++) {\n            if ((lbl = \"G\" + i.toString()) in sequences) groupSeq[i] = sequences[lbl];\n            if ((lbl = \"E\" + i.toString()) in sequences) enemySeq[i] = sequences[lbl];\n        }\n        \n        // Ranking window\n        var param:* = {\n            tweet:\"Nomltest FL [SCORE:%SCORE%/LEVEL:%SCORE2%] #wonderfl\", \n            scoreTitle:\"SCORE\", \n            title:\"Nomltest FL Net Ranking\"\n        }\n        rankingMaker = data[\"ranking\"];\n        rankingMaker.initialize(new WonderflAPI(loaderInfoParameters), param);\n        rankingMaker.score2(12, \"Lv.%SCORE%\", \"LEVEL\");\n        rankingMaker.score3(15, \"%SCORE% eat\", \"EATEN\");\n\n        onResourceLoaded();\n    }\n    \n    private var shadow:DropShadowFilter = new DropShadowFilter(3, 45, 0, 0.5, 4, 4);\n    private function newTexture(bmp:BitmapData, x:Number, y:Number, w:Number, h:Number, a:int, scale:Number, c:Array, shd:Boolean, flash:Boolean) : CMLMovieClipTexture {\n        var org:CMLMovieClipTexture = new CMLMovieClipTexture(bmp, x, y, w, h, false, a, int(bmp.width/w)*w-w), tex:CMLMovieClipTexture; // int(bmp.width/w)*w-w (for avoid bug)\n        tex = org.cutout(scale, scale, 0, new ColorTransform(c[0],c[1],c[2],1), 0, (shd)?6:0);\n        if (flash) {\n            tex.animationPattern = new Vector.<CMLMovieClipTexture>(2, true);\n            tex.animationPattern[0] = tex;\n            tex.animationPattern[1] = org.cutout(scale, scale, 0, new ColorTransform(1-(1-c[0])*0.6,1-(1-c[1])*0.6,1-(1-c[2])*0.6,1), 0, (shd)?6:0);\n        }\n        if (shd) {\n            var i:int, imax:int = tex.animationCount, bmd:BitmapData;\n            for (i=0; i<imax; i++) {\n                bmd = tex.animationPattern[i].bitmapData;\n                bmd.applyFilter(bmd, bmd.rect, bmd.rect.topLeft, shadow);\n            }\n        }\n        return tex;\n    }\n\n    public function renderText(txt:String, font:CMLMovieClipTexture, asciiOffset:int=48) : CMLMovieClipTexture {\n        var pt:Point = new Point(), i:int, imax:int=txt.length, t:CMLMovieClipTexture, \n            bd:BitmapData = new BitmapData(font.width*imax, font.height, true, 0);\n        for (i=0; i<imax; i++) {\n            t = font.animationPattern[txt.charCodeAt(i) - asciiOffset];\n            bd.copyPixels(t.bitmapData, t.rect, pt);\n            pt.x += font.width;\n        }\n        return new CMLMovieClipTexture(bd);\n    }\n    \n    public function print(x:Number, y:Number, txt:String, font:CMLMovieClipTexture, pitch:int, asciiOffset:int=32) : void {\n        var tx:Number=x+8, ty:Number=y+8, i:int, imax:int=txt.length;\n        for (i=0; i<imax; i++) {\n            mc.copyTexture(font, tx, ty, txt.charCodeAt(i)-asciiOffset);\n            tx += pitch;\n        }\n    }\n    \n    public function showRanking(onClose:Function) : void {\n        var window:* = rankingMaker.makeRankingWindow();\n        window.addEventListener(Event.CLOSE, onClose);\n        mc.parent.addChild(window);\n    }\n    \n    public function registerRanking(onClose:Function) : void {\n        var window:* = rankingMaker.makeScoreWindow(scrManager.score, scrManager.level, scrManager.eaten);\n        window.addEventListener(Event.CLOSE, onClose);\n        mc.parent.addChild(window);\n    }\n    \n    // called from &rungroup command in CML\n    private function _onRunGroup(fbr:CMLFiber, args:Array) : void {\n        var enemyType:int = (args[0]==0) ? int(Math.random()*15) : (args[0]-1);\n        Group.run(groupID[enemyType], enemyType);\n    }\n    \n    // called from &groupbonus command in CML\n    private function _onGroupBonus(fbr:CMLFiber, args:Array) : void {\n        var g:Group = fbr.object as Group;\n        if (g) {\n            g.finished = true;\n            g.bonus = args[0];\n        }\n    }\n}\n\n//--------------------------------------------------------------------------------\nclass ScoreManager {\n    public var score:int, level:int, eaten:int, life:int, eatBonus:int, nextExtend:int, gameoverLevel:int;\n    public var bestResult:*, startLevel:int, debugMode:Boolean, delayedFrames:int;\n    private var _scoreDraw:int, _levelDraw:int, _eatenDraw:int, _lifeDraw:int;\n    private var _scoreText:String, _levelText:String, _eatenText:String, _lifeText:String;\n\n    function ScoreManager() {\n        _loadCookie();\n        reset(false);\n    }\n    \n    public function reset(setHighScore:Boolean) : void {\n        CMLObject.globalRank = startLevel;\n        _scoreDraw = score = (setHighScore) ? bestResult.score : 0;\n        _levelDraw = level = (setHighScore) ? bestResult.level : startLevel;\n        _eatenDraw = eaten = (setHighScore) ? bestResult.eaten : 0;\n        _scoreText = \"SCORE:\" + (\"000000000\" + _scoreDraw.toString()).substr(-10);\n        _levelText = \"LEVEL:\" + (\"00\" + _levelDraw.toString()).substr(-3);\n        _eatenText = \"EATEN:\" + (\"00000\" + _eatenDraw.toString()).substr(-6);\n        _lifeText  = \"LIFE :\";\n        _lifeDraw = 0;\n        life = (debugMode) ? 0 : defaultLife;\n        eatBonus = 2;\n        nextExtend = extendScore;\n        delayedFrames = 0;\n    }\n    \n    public function update() : void {\n        var dif:int = (score - _scoreDraw + 7) >> 3;\n        level = int(CMLObject.globalRank);\n        _scoreDraw += dif;\n        if (dif > 0) {\n            _scoreText = \"SCORE:\" + (\"000000000\" + _scoreDraw.toString()).substr(-10);\n        }\n        if (_levelDraw != level) {\n            _levelDraw = level;\n            _levelText = \"LEVEL:\" + (\"00\" + _levelDraw.toString()).substr(-3);\n        }\n        if (_eatenDraw != eaten) {\n            _eatenDraw = eaten;\n            _eatenText = \"EATEN:\" + (\"00000\" + _eatenDraw.toString()).substr(-6);\n        }\n        if (_lifeDraw != life) {\n            _lifeDraw = life;\n            if (debugMode) {\n                _lifeText = \"MISS :\" + _lifeDraw.toString();\n            } else {\n                _lifeText = \"LIFE :\";\n                for (var i:int=0; i<_lifeDraw; i++) _lifeText += \"|\";\n            }\n        }\n        if (mc.fps.frameSkipLevel > 3) delayedFrames++;\n    }\n    \n    public function draw() : void {\n        resManager.print(-220, -220, _scoreText, resManager.fonttex, 16);\n        resManager.print(-220, -204, _levelText, resManager.fonttex, 16);\n        resManager.print(-220, -188, _eatenText, resManager.fonttex, 16);\n        resManager.print(-220, -172, _lifeText,  resManager.fonttex, 16);\n        if (debugMode) {\n            resManager.print(-223, 190, \"PRESS [Q] TO EXIT\", resManager.fonttex, 16);\n            resManager.print(-223, 209, \"FRAME DELAY :\"+mc.fps.delayedFrames.toFixed(2), resManager.fonttex, 16);\n        }\n    }\n    \n    public function checkResult() : Boolean {\n        return _updateCookie();\n    }\n    \n    public function destroyAll(groupBonus:int) : void {\n        eatBonus += 3;\n        if (eatBonus > 50) eatBonus = 50;\n        addScore(groupBonus);\n    }\n    \n    public function destroyAllFailed() : void {\n        eatBonus -= 2;\n        if (eatBonus < 1) eatBonus = 1;\n    }\n    \n    public function miss() : Boolean {\n        actManager.destroyAllEnemies();\n        eatBonus>>= 1;\n        if (eatBonus < 1) eatBonus = 1;\n        if (debugMode) {\n            life++;\n        } else {\n            if (--life < 0) {\n                gameoverLevel = level;\n                mc.scene.id = \"gameover\"\n                return true;\n            }\n        }\n        return false;\n    }\n    \n    public function eat() : int {\n        eaten++;\n        addScore(eatBonus * 10);\n        return eatBonus;\n    }\n    \n    public function addScore(gain:int) : void {\n        score += gain;\n        if (score >= nextExtend) {\n            nextExtend += extendScore;\n            life++;\n            resManager.sionDriver.playSound(5,1,0,0,3);\n            Particle.$(actManager.player.x, actManager.player.y, 0, -10, 0, 0.75, 0, resManager.lifeUpTexture);\n        }\n    }\n    \n    public function clearCookie() : void {\n        var so:SharedObject = SharedObject.getLocal(\"savedData\");\n        if (so) so.clear();\n        bestResult = {\"score\":0, \"level\":0, \"lines\":0};\n    }\n    \n    private function _loadCookie() : void {\n        var so:SharedObject = SharedObject.getLocal(\"savedData\");\n        bestResult = (so && \"bestResult\" in so.data) ? (so.data.bestResult) : {\"score\":0, \"level\":0, \"eaten\":0};\n    }\n    \n    private function _updateCookie() : Boolean {\n        if (startLevel != 0 || debugMode) return false;\n        var updated:Boolean = false, so:SharedObject, isHighScore:Boolean = (score > bestResult.score);\n        if (score > bestResult.score) { updated = true; bestResult.score = score; }\n        if (gameoverLevel > bestResult.level) { updated = true; bestResult.level = gameoverLevel; }\n        if (eaten > bestResult.eaten) { updated = true; bestResult.eaten = eaten; }\n        if (updated && (so = SharedObject.getLocal(\"savedData\"))) {\n            so.data.bestResult = bestResult;\n            so.flush();\n        }\n        return (isHighScore);\n    }\n}\n\n//--------------------------------------------------------------------------------\nclass ActorManager {\n    public var shots:ActorFactory;\n    public var enemies:ActorFactory;\n    public var bullets:ActorFactory;\n    public var player:Player;\n    public var master:Group;\n    public var frameCounter:int;\n    public var groupID:int;\n    public var pauseRoot:Boolean = false;\n    \n    function ActorManager() {\n        shots     = new ActorFactory(Shot, 0, 0);\n        enemies   = new ActorFactory(Enemy, 0, 1);\n        bullets   = new ActorFactory(Bullet, 0, 2);\n        player = new Player();\n        player.evalIDNumber = 3;\n        player.drawPriority = enemies.drawPriority;\n        Particle.initialize(640);\n    }\n    \n    public function reset() : void {\n        CMLObject.destroyAll(0);\n        Particle.reset();\n    }\n    \n    public function start() : void {\n        player.create(0, 180);\n        master = new Group();\n        master.create(0, 0);\n        master.execute(resManager.stageSequence);\n    }\n    \n    public function draw() : void {\n        Particle.draw();\n        Actor.draw();\n    }\n    \n    public function update() : void {\n        // Actor.update() is called from CMLMovieClip\n        Particle.update();\n        if (player.status != Player.STATUS_INVISIBLE) Actor.testf(bullets.evalIDNumber, player.evalIDNumber);\n        Actor.testf(shots.evalIDNumber, enemies.evalIDNumber);\n    }\n    \n    public function destroyAllEnemies() : void {\n        eval(enemies.evalIDNumber, function(act:Actor) : void { \n            act.destroy(2); \n        });\n        eval(bullets.evalIDNumber, function(act:Actor) : void { \n            Particle.$(act.x, act.y, Math.random()*8-4, Math.random()*6-4, 0, 0.4, 0xaaaac3);\n            act.destroy(0);\n        });\n    }\n    \n    static public function eval(evalID:int, func:Function) : void {\n        var act:Actor, list:Actor = Actor._cml_internal::_evalLayers[evalID];\n        for (act=list._cml_internal::_nextEval; act!=list; act=act._cml_internal::_nextEval) func(act);\n    }\n}\n\n// Actors --------------------------------------------------------------------------------\nclass Player extends Actor {\n    static public const STATUS_TRANSPARENT:int = 0;\n    static public const STATUS_NORMAL:int = 1;\n    static public const STATUS_INVISIBLE:int = 2;\n    public var status:int, statuFrameCount:int, animationCount:int, hitSize2:Number;\n    public var shotFlag:int, eatRangeShape:Shape, eatRangeAngle:Number;\n    public var eatRangeDraw:Number;\n    public var playerSpeed:Array = [10, 9, 9, 5];\n    public var eatRange:Array = [60, 45, 30, 55];\n    \n    public function Player() {\n        scopeEnabled = false;\n        eatRangeAngle = 0;\n        size = 60;\n        hitSize2 = 16;\n        eatRangeDraw = 0;\n        eatRangeShape = new Shape();\n    }\n    \n    override public function onCreate() : void {\n        animationCount = 0;\n        shotFlag = 0;\n        setAsDefaultTarget();\n        expandScope(-16-mc.scopeMargin, -16-mc.scopeMargin);\n        status = STATUS_INVISIBLE;\n        statuFrameCount = 30;\n    }\n    \n    override public function onUpdate() : void {\n        var ix:int = mc.control.x, iy:int = mc.control.y,\n            flg:uint = (mc.control.flag >> 4) & 3,\n            dx:Number = ix * ((iy==0) ? 1 : 0.707), dy:Number = iy * ((ix==0) ? 1 : 0.707),\n            spd:Number = playerSpeed[flg];\n        if (status != STATUS_INVISIBLE) {\n            x += dx * spd;\n            y += dy * spd;\n            limitScope();\n            if (shotFlag != flg) {\n                halt();\n                shotFlag = flg;\n                if (shotFlag > 0) execute(resManager.shotSeq[shotFlag-1]);\n                size = eatRange[shotFlag];\n            }\n            eatRangeAngle += eatRangeDraw * 0.002;\n                 if (size > eatRangeDraw) eatRangeDraw += 2;\n            else if (size < eatRangeDraw) eatRangeDraw -= 2;\n        }\n        \n        if (--statuFrameCount == 0) {\n            if (status == STATUS_TRANSPARENT) status = STATUS_NORMAL;\n            else setTransparent();\n        }\n    }\n\n    override public function onDraw() : void {\n        if (status != STATUS_INVISIBLE) {\n            animationCount++;\n            if ((status == STATUS_NORMAL) || (animationCount & 1)) {\n                mc.copyTexture(resManager.playerTexture, x, y);\n            }\n            updateEatRange();\n            mc.draw(eatRangeShape, x, y)\n        } else {\n            mc.copyTexture(resManager.playerTexture, x, y + ((statuFrameCount-6) * (statuFrameCount-6) - 36) * 0.4);\n        }\n    }\n    \n    override public function onFireObject(args:Array) : CMLObject {\n        return actManager.shots.newInstance();\n    }\n    \n    override public function onHit(act:Actor) : void {\n        if (status == STATUS_TRANSPARENT) return;\n        var dx:Number = act.x - x, dy:Number = act.y - y, i:int;\n        if (dx * dx + dy * dy < hitSize2) {\n            Particle.$(x, y, 0, 0, 0, 0, 0, resManager.explosionTextures[12]);\n            for (i=0; i<32; i++) Particle.$(x, y, Math.random()*8-4, Math.random()*6-8, 0, 0.4, 0xaaaac3);\n            setDestruction(scrManager.miss());\n        }\n    }\n    \n    public function setTransparent() : void {\n        status = STATUS_TRANSPARENT;\n        statuFrameCount = 60;\n    }\n    \n    public function setDestruction(gameover:Boolean) : void {\n        halt();\n        status = STATUS_INVISIBLE;\n        if (!gameover) {\n            statuFrameCount = 30;\n            resManager.sionDriver.playSound(2,1,0,0,2);\n        } else {\n            statuFrameCount = -1;\n        }\n    }\n    \n    private var cmd:Vector.<int> = Vector.<int>([1,2,2,2,2]);\n    private var path:Vector.<Number> = new Vector.<Number>();\n    private function updateEatRange() : void {\n        var g:Graphics = eatRangeShape.graphics,\n            sin:Number = Math.sin(eatRangeAngle) * eatRangeDraw,\n            cos:Number = Math.cos(eatRangeAngle) * eatRangeDraw,\n            asin:Number = (sin<0) ? -sin : sin,\n            acos:Number = (cos<0) ? -cos : cos;\n        path[0] =  cos; path[1] = sin;\n        path[2] = -sin; path[3] = cos;\n        path[4] = -cos; path[5] = -sin;\n        path[6] =  sin; path[7] = -cos;\n        path[8] =  cos; path[9] =  sin;\n        g.clear();\n        g.lineStyle(2, 0x4040c0, 0.5);\n        g.drawPath(cmd, path);\n        g.drawRect(-acos, -asin, acos*2, asin*2);\n    }\n}\n\n//--------------------------------------------------------------------------------\nclass Shot extends Actor {\n    public function Shot() { size = 10; }\n    override public function onCreate() : void { }//scopeYmax = 400; }\n    override public function onDraw() : void { mc.copyTexture(resManager.shotTexture, x, y); }\n    override public function onHit(act:Actor) : void { destroy(1); }\n}\n\n//--------------------------------------------------------------------------------\nclass Group extends CMLObject {\n    static private var _freeList:Array = [];\n    static public function run(groupType:int, enemyType:int) : void { \n        var group:Group = _freeList.pop() || new Group();\n        group.create(0, 0);\n        group.execute(resManager.groupSeq[groupType]);\n        group.enemyType = enemyType;\n        group.bonus = group.childCount = 0;\n        group.destroyAll = true;\n        group.finished = false;\n    }\n    public var enemyType:int, childCount:int, finished:Boolean, destroyAll:Boolean, bonus:int;\n    function Group() { }\n    public function onChildDestroy(enemy:Enemy) : int {\n        if (enemy.destructionStatus == 0) destroyAll = false;\n        if (--childCount == 0 && finished) {\n            if (bonus>0) {\n                if (destroyAll) {\n                    scrManager.destroyAll(bonus);\n                    Particle.$(enemy.x, enemy.y, 0, -6, 0, 0.5, 0, resManager.scoreTextures[bonus]);\n                } else {\n                    scrManager.destroyAllFailed();\n                }\n            }\n            destroy(0);\n        }\n        return 0;\n    }\n    override public function onDestroy() : void { _freeList.push(this); }\n    override public function onNewObject(args:Array) : CMLObject {\n        var enemy:Enemy = actManager.enemies.newInstance();\n        enemy.type = enemyType;\n        enemy.group = this;\n        childCount++;\n        return enemy;\n    }\n}\n\n//--------------------------------------------------------------------------------\nclass Enemy extends Actor {\n    private var flagDamage:int = 0;\n    public  var type:int, group:Group, texture:CMLMovieClipTexture, bonus:int;\n    public function Enemy() {}\n    override public function onCreate() : void {\n        var seq:CMLSequence = resManager.enemySeq[type];\n        flagDamage = 0;\n        life = seq.getParameter(0);\n        bonus = seq.getParameter(1);\n        texture = resManager.enemyTextures[type];\n        size = texture.center.x;\n        execute(seq);\n    }\n    override public function onDestroy() : void {\n        group.onChildDestroy(this);\n        if (destructionStatus > 0) {\n            Particle.$(x, y, vx, vy, -vx*0.04, -vy*0.04, 0, resManager.explosionTextures[type]);\n            if (destructionStatus == 1) {\n                Particle.$(x, y, 0, -6, 0, 0.5, 0, resManager.scoreTextures[bonus]);\n                var i:int, col:uint = resManager.enemyColors[type];\n                for (i=0; i<6; i++) Particle.$(x, y, Math.random()*4-2+vx*0.3, Math.random()*4-2+vy*0.3, 0, 0.5, col);\n            }\n        }\n    }\n    override public function onDraw() : void { --flagDamage; mc.copyTexture(texture, x, y, isFlashing()); }\n    override public function onFireObject(args:Array) : CMLObject { return actManager.bullets.newInstance().init(args); }\n    override public function onHit(act:Actor) : void {\n        flagDamage = 6;\n        if (life != 0) {\n            life -= 1;\n            if (life > 5) Particle.$(x, y, Math.random()*4-2, Math.random()*4-2, 0, 0.5, resManager.enemyColors[type]);\n            if (life <= 0) {\n                destroy(1);\n                resManager.sionDriver.playSound((size>24)?1:3,1,0,0,1);\n                scrManager.addScore(bonus * 10);\n            }\n        }\n    }\n    private function isFlashing() : int {\n        return (flagDamage>0) ? (flagDamage&1) : 0;\n    }\n}\n\n//--------------------------------------------------------------------------------\nclass Bullet extends Actor {\n    public var texture:CMLMovieClipTexture;\n    public var ac:int = 0, acmax:int = 0, acspd:int = 0;\n    public var shape:int = 0;\n    \n    public function Bullet() { size = 4; }\n    public function init(args:Array) : Bullet { \n        shape = args[0];\n        texture = resManager.bulletTextures[shape];\n        acspd = 1;\n        life = 1;\n        acmax = texture.animationCount << acspd;\n        return this;\n    }\n    override public function onCreate() : void { ac = (shape<3) ? 0 : ((angleOnStage*0.08888888888888889+8.5)&15); }\n    override public function onUpdate()       : void { if (shape<3 && ++ac==acmax) ac = 0; super.onUpdate(); }\n    override public function onDraw()         : void { mc.copyTexture(texture, x, y, ac>>acspd); }\n    override public function onFireObject(args:Array) : CMLObject { return actManager.bullets.newInstance().init(args); }\n    override public function onHit(act:Actor) : void {\n        var dx:Number = (vx < 0) ? -vx : vx, dy:Number = (vy < 0) ? -vy : vy,\n            v:Number = (dx > dy) ? (dx + dy * 0.2928932188134524) : (dy + dx * 0.2928932188134524);\n        life -= v * 0.0125;\n        if (life <= 0) {\n            destroy(1);\n            resManager.sionDriver.playSound(4,1,0,0,4);\n            dx = actManager.player.x - x;\n            dy = actManager.player.y - y;\n            v = 3 / Math.sqrt(dx*dx+dy*dy);\n            Particle.$(x, y, -dx*v, -dy*v, dx*v*0.18, dy*v*0.18, 0, resManager.scoreTextures[scrManager.eat()]);\n        }\n    }\n}\n\n//--------------------------------------------------------------------------------\nclass Particle {\n    public var x:Number, y:Number, vx:Number, vy:Number, ax:Number, ay:Number, color:uint, anim:int, tex:CMLMovieClipTexture, next:Particle;\n    public function Particle(next_:Particle) { next = next_; }\n    static private var _freeList:Particle = null, _particles:Array = [new Particle(null), new Particle(null)];\n    static private var _width:Number, _height:Number, _rc:Rectangle = new Rectangle(0, 0, 4, 4);\n    static public function initialize(particleMax:int) : void {\n        for (var i:int=0; i<particleMax; i++) _freeList = new Particle(_freeList);\n        _width = 450;\n        _height = 450;\n    }\n    static public function reset() : void {\n        var i:int, p:Particle;\n        for (i=0; i<2; i++) {\n            p = _particles[i].next;\n            if (p) {\n                while (p.next != null) p = p.next;\n                p.next = _freeList;\n                _freeList = _particles[i].next;\n                _particles[i].next = null;\n            }\n        }\n    }\n    static public function update() : void {\n        var p:Particle, prev:Particle;\n        for (var i:int=0; i<2; i++) {\n            prev = _particles[i];\n            for (p = prev.next; p != null; p = p.next) {\n                p.x += (p.vx += p.ax);\n                p.y += (p.vy += p.ay);\n                if (p.y>_height || ++p.anim == 16) {\n                    prev.next = p.next;\n                    p.next = _freeList;\n                    _freeList = p;\n                    p = prev;\n                } else {\n                    prev = p;\n                }\n            }\n        }\n    }\n    static public function draw() : void {\n        var p:Particle, screen:BitmapData = mc.screen;\n        for (p = _particles[0].next; p != null; p = p.next) {\n            _rc.x = p.x;\n            _rc.y = p.y;\n            screen.fillRect(_rc, p.color);\n        }\n        for (p = _particles[1].next; p != null; p = p.next) {\n            mc.copyTexture(p.tex, p.x, p.y, (p.tex.animationCount>1)?p.anim:0);\n        }\n    }\n    static public function $(x:Number, y:Number, vx:Number, vy:Number, ax:Number, ay:Number, color:uint, tex:CMLMovieClipTexture=null) : void {\n        if (!_freeList) return;\n        var newParticle:Particle = _freeList, list:Particle;\n        _freeList = _freeList.next;\n        if (tex) {\n            newParticle.x = x;\n            newParticle.y = y;\n            newParticle.anim = 0;\n            list = _particles[1];\n        } else {\n            newParticle.x = x + _width * 0.5;\n            newParticle.y = y + _height * 0.5;\n            newParticle.anim = -256;\n            list = _particles[0];\n        }\n        newParticle.vx = vx;\n        newParticle.vy = vy;\n        newParticle.ax = ax;\n        newParticle.ay = ay;\n        newParticle.tex = tex;\n        newParticle.color = color;\n        newParticle.next = list.next;\n        list.next = newParticle;\n    }\n}\n\n// scripts --------------------------------------------------------------------------------\nvar cmlScript:String = String(<cml><![CDATA[\nw60[[w60-$l*5&rungroup0l$r+=0.5]10w70];\n#S1{@{^f-12[q-14f{vx-6a0.3,-1}q14f{vx8a-0.4,-1}w2q-14f{vx-2a0.1,-1}q14f{vx4a-0.2,-1}w2q-14f{vx-8a0.4,-1}q14f{vx6a-0.3,-1}w2q-14f{vx-4a0.2,-1}q14f{vx2a-0.1,-1}w2]}\n^f12{ay-1}[ha0q-12fq0fq12fw2q-14fq0fq14fw2ha0q-12fq0fq12fw2q-10fq0fq10fw2]};\n#S2{ha0[[bm4,30+$l*10f30w2]3[bm4,60-$l*10f30w2]3]};\n#S3{ha0[[qx$l*10-30f30]7w2]};\n#G0{qy-225[?$?<0.4qx-$?*150-25n{}qx$?*150+25n{}:qx$??*175n{}]&groupbonus0};\n#G3{l$1=$i?(3)[?$1==2{qx-225[qy-160n{}w5]5}{qx225[qy-160n{}w5]5}:qx$1*450-225[qy-160n{}w5]10]&groupbonus200};\n#G6{l$1=$i?(3)[?$1==2{qx-225[qy-$l*20n{}w5]5}{qx225[qy-$l*20n{}w5]5}:qx$1*450-225[qy-$l*15n{}w5]10]&groupbonus200};\n#G7{l$1=$i?(3)[?$1==2{qx-225[qy-120+$l*20n{}w5]5}{qx225[qy-120+$l*20n{}w5]5}:qx$1*450-225[qy-120+$l*15n{}w5]10]&groupbonus200};\n#G9{qy-225[s?$i?(5)[qx$??*200n{}w3]10:1[qx$l*40-180n{}w3]10:2[qx180-$l*40n{}w3]10:3[qx180-$l*40n{}qx$l*40-180n{}w3]5:4[qx20+$l*40n{}qx-$l*40-20n{}w3]5]&groupbonus200};\n#G10{qy-225[s?$i?(3)[qx$l*40-180n{}w3]10:1[qx180-$l*40n{}w3]10:2[qx180-$l*40n{}qx$l*40-180n{}]10]&groupbonus200};\n#G13{q175,-225[?$?<0.4n{}w15n{}:n{}]&groupbonus0};\n#E0{20,100#T{[bm$2,$1,,2bm2,2f$3{3}w$2*2bm$2,-$1,,2bm2,2f$3{3}w]3}i20py-120~ha180[s?$r&T 160,8,6:35&T 160,8,7:70&T 160,9,8:105&T 160,10,8:140&T 140,10,10:180&T 140,10,12]ay0.1};\n#E1{16,100#B{bm$1,360bm$2,15,5,1}i20py-120~ha$?*360[s?$r&B 12,12:40&B 12,14:70&B 14,14:110&B 16,14:140&B 18,14:190&B 20,14]f7{1}w60ay0.1};\n#E2{20,100i20py-120~bs37,10,,1bm2,,0.2^f{2}ha90[s?$rf4:30[hs180f4.5]2f:60[hs120f5]3:90[hs90f5]4:130[hs88f5.5]4]w90ay0.1};\n#E3{9,5{l$1=$sx*-12l$2=$sx*6[v$1,0w6v$2,10w9v$1,0w6v$2,-10w9]} br1,40[s?$rw70-$r*0.4f3{0}:110w25f3{0}:250w22br1,40bm2,3f4{0}]};\n#E4{9,5^f{4}{[s?$r[w45-$r*0.3f6+$r*0.08]:70[w15f12]:100[w15f13.5]:130[w15f15]:190[w12ht$??*10f16]]}{[csa10w]}l$1=$sx*270l$2=$sx*-90[i0ha$1rcw10i45ha$2rc~]};\n#E5{9,5vx$sx*-5ha180[s?$rbr1,30,2^f4{2}:30br1,40,2^f4{2}:55br1,30,2^f4{2}:80br2,30,2^f4{2}:105br2,30,3^f6{2}:140br2,60,4bm2,20^f7{2}:220br2,30,3bm2,,0.8^f10{5}][vy-8ay0.8w22f4]};\n#E6{7,3{[s?$rw30bm2,80-$r*0.4f6{0}:100w30bm4,160-$r*0.4f6{0}:200:w8bm4,90f6{0}w22f12{3}]}v$sx*-24,0i45v$sx*8,4~ay-0.5};\n#E7{7,3{w$?*40+10ha[s?$r[f4{1ay0.2+$r*0.003}w80-$r*0.4]:120ha$??*30[f4{1ay0.5}w25]:220bm2,30,2ha$??*20[f4{1ay0.6}w20]]}v,-4i60px$sx*-200v$sx*6,4~htad-0.3};\n#E8{7,3{w20[s?$rbr$r*0.02+1,120,2,2f4+$r*0.03{2}:210br4,120,2,2bm2,,2f14{5}]}v$sx*-12,-8i60p$sx*120,0v$sx*-12,4~ay-0.5};\n#E9{3,1^f{0}{ht$??*5ad1.2w14ad-1.2}[s?$rbm2,,1{w25-$r*0.3f6+$r*0.12}w25[w18-$r*0.1f6+$r*0.12+$l]:80w10bm3,,2f14{3}w15[w10f16+$l]:140w10bm4,,3f16{3}w15[w10f18+$l*2]]};\n#E10{3,1^f{1}vy48i12vy0~ha$?*360[s?$rbm2+$r*0.03,360:230bm10,360]f$?*1.5+3w5ay-0.12[w20ha$?*360f]};\n#E11{3,1[s?$rvy24:85vy32:175vy40]i8vy0~[s?$rbm3,,1:30bm3,,1.5:60bm2,360bm3,,1.5:125bm3,240bm3,,1.5:260bm3,40bm3,,1.5]f-8{5hoad0.6}w5ad1};\n#E12{35,300i20py-120~[s?$rl$1=75l$2=6:25l$1=60l$2=7:50l$1=45l$2=8:70l$1=30l$2=9:90l$1=25l$2=10:150l$1=15l$2=10][i0vx$i?(2)*8-4i12vx~bm12,360f40{wbm2,$1f$2{0}ko}$1,$2w12]5ay1};\n#E13{35,300i20py-120~{w25[s?$rbm4,270:40bm5,360:80bm5,288:120bm7,309][ht-24bv0.5f4{4}hs4[f]5bv-0.5[f]7w50]6}i50[px-175v~px175v~]3ay1};\n#E14{35,300i20py-120~vy-0.25[ht-90f8{5hoad-0.5ht-30*$1f6{2}hs$r*0.04*$1[w4f]7ko}1w30ht90f8{.}-1w]3ay1};\n]]></cml>);\n\n// mml --------------------------------------------------------------------------------\nvar mmlMain:String = String(<mml><![CDATA[#TITLE{Nomltest main theme};t152;\n#A=v12c4v6c8;#C=e.f.dc4d;#B=C>a1rg4.<c4.;#T=s28dd8ff8gg8aa8<crd8s24[>d<c>d<cd8]20>d<c>d<c;\n#S=s20[dfgagf]8s28aa8<cc8dd8ff8s25grars20[[a8gfd8]s25a8a8]a8gfdefgfedc>a<c>agfgfededc>a<c>agfaf<c;\n%1r1r1$[@4q1s24o6l8[r4A(5)A(4)A(0)A(2)v12>a<rr4A(5)A(4)A(7)A(5)v12cr]|\n@2q2s22l4[d2r8ef2rgf2rgfedc|d2ref2rga2rgagfer8]d2ref2rga2r<cdc>agf8\n@3q3s20l8B>f4.e2.r<Ca1rg4.a4.<c1rr>Bf4.e2.re.f.dc.d.>ag.<c.>ag.a.fd.f.ab-.<d.f(c+.e.g ar4.\n@2q2s22f2.ef2.rgf4e4d4c4>a2.rfg2.fag2.fecde4f4g4a4<c+4d4e4.f2.ef2.rga4g4f4e4c2.r>fg2.fal4gfec.d.a.<d.q5a2.r8]4\n@3q0s20l16S[>a<c>a<cd8>a<c>a<cd8erf8]3Td8d8;\n#A=v8a4v4a8;#B=degfgea4degf<c4d4>degf;#C=l8a.a.fe4f;#D=v10q0s24a8a8r4v8q3s20;#E=d>a<cd4>a<cd4>a<cdfecl4dc>ag;\n%1r1r1$[@4q1s24v8l8[r4AAAAv8gr|r4AAA(2)A(3)v8gr]\nv4q0o4l16a<(cdega<(cdl32s28edgeag<(c>a<dcedgeag<(cd>(a<c>gaegdecd>))a<c>gal16s24edc>))agedc|\nv8s20o5l8[aB<c4>a4gaegde|f4B<c4d4cd>a<c>gec]f4B<e4f4egdecd>a\nq3o5Cd1rl4c.f.d.c.DC<d1rl4c.d.e2.>DCd1rl4c.f.a.g.Dl8a.a.fe.f.dc.e.ec.e.c>a.<c.df.a.<d>(g.a.<d(er4.\nv8o6Efedcl8d4ced4ced4cfe4c>ga b-<l4cdefab-<c+l8c+Eagfel8d4ced4cfl4edc>a.b-.<g.b-.<q5g2.l8r]4\n@1v6q0l16r8.S[>a<c>a<cd8>a<c>a<v12crdrv6erf]3Td;\n#A=v8d4v4d8;#B=[aaeeffdd];\n%1l8r1r1$[@4q1s24v8l8[r4AA(-2)AA(3)v8err4AA(-2)AA(7)v8er]|\n@1q1s32o7v8l16B32[B4[ggddeecc]3v10q0s24>c8c8<v8q1s32aacc]3B[ggddeecc]\n@4q0s20o4v6l8f.g.a<d.g.ad.g.b<d.e.g\n@4q1s24o5v8[a4A(3)A(2)AA(-2)v8drr4A(3)A(2)A(-2)A(-5)v8>a<rr4A(-7)A(-9)A(-5)A(-7)|\n>v8efgl4ab-<c+defgl8g]v8grs20>l4f.<d.g.q5<d2.l8r]4\n@4q1s24o5v8l8[r4AA(-2)AA(3)v8err4AA(-2)AA(7)v8gr]5;\n#A=dd<d>d<d>d<cd>;#B=>b-b-<b->b-<b->b-<ab-;#C=>g8.g<g8>g8rrgg<g8g8;#D=dd<d8>dr<d8>;#M=[A]3d<cd>a<cd>a<c>;\n%1@2v10q0s30o3l16M$[[M]4|[[B]3>b-<ab->b-<ab-ab-[B(2)]3c-b<c>cb-<c>c<c>[M]]\nq1s24[[C(3)][C(2)]]3CC(2)l8>b-.b-.<b->e-.e-.<e-l8e.e.eq0s26(a.((a.((l16aa\nv10[[D]4[D(-4)]4[D(-7)][D(-5)]|[D(-4)][D(-5)]][D(1)]4]4\n[[>b-b-<b->b-<b->b-<ab-][cc<c>c<c>cb-<c>][dd<d>d<d>d<cd>]4]5;\n#B=o2v10c;#W=o2v6c;#S=o4v12c;#H=o6v6g;#F=o4v10c))c(c(c(c(c(c;\n#A=BHHWSHHBr))c)cHSHHB;#C=BS))cWSr))ccBF;#D=BHHWSHBrHrB))cSHBr;\n%2@0q0s29l16AC$[[A]7C|[[D]7C][BrHHo2v8crHHSrv6cHrrHHo2v10rrcHrro2v7crSr|v10cHrrgg]4\no4v6crc((c((c((c[BrHHSrHHrHB))cSo2v10rcHBrHo2v8cSrHHrHB))cSrHH]3\nBrHo2v12crHo4v10cro2v12crHo2v12crHSv9cs28(c8.s28(c8.s27(c8 s26c8 s29o2v12rc o4v10c(c(c(c\n[[A]6|S8c8Brs27S4c8s29Brs27o4v13c4c8s29Brs27o4v15c4c8s29Bro4v13c((c]AC]4\n[D]7C[BHHWSHBrHrB))cSrcH]3S))cWS))cWS))cWS))cWSrv14s27c8s29[[D]3C];\n]]></mml>);\n\nvar mmlGameOver:String = String(<mml><![CDATA[#TITLE{Nomltest gameover};t152;\n%1@3v12o6q6s26l8r2e.f.dc.d.>ag.<c.>ag.a.fe1;%1@4v8o5q6s26l8r2b-.b-.b-g.g.gf.f.fe.e.e >a1;\n%1@4v6 o5q6s26l2r2fed>b-<c1;%1@2v10o3q0s26l8r2g.g.ga.a.ab-.b-.b-<c.c.c q6s18d1;\n%2@0q0s28l16r4o4v14cv12c((c((co2v12co6v8rgg o2v10co6v8rgg o4v14crv8c o6v8g o6v8rrgg o2v12rrc o6v8grr o2v10cr o4v14cr v12c o6v8grrggq2s20 o6v5g1;\n]]></mml>);\n","modified_date":1317065911,"compile_ok":"1","created_date":1314981283,"forked_count":"17","license":"MIT","swf":"http://swf.wonderfl.net/swf/usercode/4/48/4882/488247371cf324e228b6e3e5f34d4f6348aab77b.swf","diff":"0","user":{"icon":"http://wonderfl.net/images/icon/2/27/278a/278afc585a0a283d6e1f13f081cfd9c377ab9db2m","name":"keim_at_Si"},"title":"Nomltest on Flash","id":"alru","favorite_count":"106"},"stat":"ok"}