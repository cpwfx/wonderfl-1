{"code":{"thumbnail":"http://wonderfl.net/images/capture/2/21/2116/211612e02329f5d9f5473e9e9580e081e9ca9c89_100.jpg?t=1443206098","parent":null,"as3":"package {\n    import flash.text.*;\n    import flash.events.*;\n    import flash.display.Sprite;\n    import flash.utils.ByteArray;\n    \n    import org.si.sion.SiONDriver;\n    import org.si.sion.midi.*;\n    import org.si.sion.events.*;\n    import org.si.utils.ByteArrayExt;\n    \n    import com.bit101.components.*;\n    \n    \n    public class main extends Sprite {\n        public var driver:SiONDriver = new SiONDriver(4096);\n        public var smfData:SMFData = new SMFData();\n        \n        private var _title:TextField;\n        private var _midiMode:Label;\n        private var _tempo:Label;\n        \n        /*--------------------------------------------------\n         * How to play MIDI file on SiON version 0.65\n         * 1) create SMFData object \n         * 2) call load() or loadBytes() method\n         * 3) call SiONDriver.play() with SMFData object\n         *--------------------------------------------------*/\n        private function _playMIDIFile(midiFile:ByteArray) : void\n        {\n            smfData.loadBytes(midiFile);\n            driver.play(smfData);\n        }\n        \n        \n        \n        function main() {\n            var i:int;\n            \n            // black minimal comps\n            Style.BACKGROUND = 0x404040;\n            Style.BUTTON_FACE = 0x606060;\n            Style.LABEL_TEXT = 0xaaaaaa;\n            Style.INPUT_TEXT = 0xaaaaaa;\n            Style.DROPSHADOW = 0;\n            Style.PANEL = 0x303030;\n            Style.PROGRESS_BAR = 0x404040;\n            \n            container = this;\n            new PushButton(this, 0, 0, \"Load SMF ...\", function(e:Event):void {\n                if (driver.isPlaying) driver.fadeOut(4);\n                new ByteArrayExt().browse(function(ba:ByteArrayExt) : void {\n                    _playMIDIFile(ba);\n                    _title.text = smfData.title;\n                    _tempo.text = \"T:\" + smfData.bpm.toFixed(1);\n                    reset();\n                }, null, null, \"Standard MIDI File\", \"*.mid;*.smf\");\n            });\n            \n            // event handler\n            driver.addEventListener(SiONEvent.FADE_OUT_COMPLETE, _onFadeOut);\n            driver.addEventListener(SiONTrackEvent.CHANGE_BPM,   _onBPMChanged);\n            driver.addEventListener(SiONTrackEvent.BEAT,         _onBeat);\n            driver.addEventListener(SiONMIDIEvent.NOTE_ON,  _onNoteOn);\n            driver.addEventListener(SiONMIDIEvent.NOTE_OFF, _onNoteOff);\n            driver.addEventListener(SiONMIDIEvent.CONTROL_CHANGE, _onControlChange);\n            driver.addEventListener(SiONMIDIEvent.PROGRAM_CHANGE, _onProgramChange);\n            driver.addEventListener(SiONMIDIEvent.PITCH_BEND, _onPitchBend);\n            // callbacks\n            driver.midiModule.onSysEx = _onSystemExclusive;\n            driver.midiModule.onFinishSequence = _onFinishSequence;\n            \n            // setup screen\n            setup();\n            _title = new TextField();\n            _title.defaultTextFormat = new TextFormat(\"_sans\", 12, 0xffffff);\n            _title.x = 120;\n            _title.y = 0;\n            _title.width = 300;\n            _title.text = \"SCC MIDI Player !! powered by SiON v0.65\";\n            addChild(_title);\n            \n            _midiMode = new Label(this, 420, 5);\n            _tempo    = new Label(this, 420, -4);\n        }\n        \n        \n    // handlers ----------------------------------------------------------------------\n        private function _onFadeOut(e:SiONEvent) : void\n        {\n            driver.stop();\n        }\n        \n        private function _onBPMChanged(e:SiONTrackEvent) : void\n        {\n            _tempo.text = \"T:\" + driver.bpm.toFixed(1);\n        }\n        \n        private function _onBeat(e:SiONTrackEvent) : void\n        {\n            tempoIndicatorAlpha = 1;\n        }\n        \n        private function _onNoteOn(e:SiONMIDIEvent) : void \n        {\n            noteOn[e.midiChannelNumber][e.note] = 1;\n            release[e.midiChannelNumber][e.note] = 1;\n        }\n        \n        private function _onNoteOff(e:SiONMIDIEvent) : void \n        {\n            release[e.midiChannelNumber][e.note] = 0.84;\n        }\n        \n        private function _onControlChange(e:SiONMIDIEvent) : void\n        {\n            switch(e.controllerNumber) {\n            case SMFEvent.CC_MODULATION:    updateModulation(e.midiChannelNumber, e.value); break;\n            case SMFEvent.CC_EXPRESSION:    updateExpression(e.midiChannelNumber, e.value); break;\n            case SMFEvent.CC_SUSTAIN_PEDAL: updateSustain(e.midiChannelNumber, e.value); break;\n            case SMFEvent.CC_PANPOD:        updatePanpod(e.midiChannelNumber, e.value); break;\n            case SMFEvent.CC_VOLUME:        updateVolume(e.midiChannelNumber, e.value); break;\n            case SMFEvent.CC_REVERB_SEND:   updateReverb(e.midiChannelNumber, e.value); break;\n            case SMFEvent.CC_CHORUS_SEND:   updateChorus(e.midiChannelNumber, e.value); break;\n            case SMFEvent.CC_DELAY_SEND:    updateDelay(e.midiChannelNumber, e.value);  break;\n            }\n        }\n        \n        private function _onProgramChange(e:SiONMIDIEvent) : void \n        {\n            updateVoiceInformation(e.midiModule, e.midiChannelNumber, e.value, e.midiChannel.drumMode);\n        }\n\n        private function _onPitchBend(e:SiONMIDIEvent) : void\n        {\n            updatePitchBend(e.midiChannelNumber, e.value);\n        }\n        \n        private function _onSystemExclusive(channelNumber:int, bytes:ByteArray) : void \n        {\n            if (driver.midiModule.systemExclusiveMode != \"\") _midiMode.text = driver.midiModule.systemExclusiveMode;\n        }\n        \n        private function _onFinishSequence() : void\n        {\n            driver.fadeOut(4);\n        }\n    }\n}\n\n\nimport flash.display.*;\nimport flash.geom.*;\nimport flash.events.*;\nimport org.si.sion.midi.*;\nimport com.bit101.components.*;\n\nvar noteOn:Vector.<Vector.<Number>> = new Vector.<Vector.<Number>>(16);\nvar release:Vector.<Vector.<Number>> = new Vector.<Vector.<Number>>(16);\nvar noteOnRect:Vector.<Vector.<Rectangle>> = new Vector.<Vector.<Rectangle>>(16);\nvar noteOnColor:Vector.<uint> = new Vector.<uint>(85);\nvar keyImage:BitmapData = new BitmapData(465, 445, false, 0);\nvar keyOnImage:BitmapData = new BitmapData(465, 445, true, 0);\nvar tempoIndicator:Shape = new Shape();\nvar keyShape:Shape = new Shape();\nvar lbl:Label = new Label();\nvar mat:Matrix = new Matrix();\nvar rc:Rectangle = new Rectangle();\nvar container:Sprite;\nvar tempoIndicatorAlpha:Number = 0;\n\nfunction setup() : void {\n    var tr:int, i:int, x:Number;\n    var bw:Array = [0,1,0,1,0,0,1,0,1,0,1,0];\n    var g:Graphics;\n    \n    for (i=0; i<16; i++) {\n        noteOn[i] = new Vector.<Number>(128);\n        release[i] = new Vector.<Number>(128); \n        noteOnRect[i] = new Vector.<Rectangle>(85);\n    }\n\n    g = tempoIndicator.graphics\n    g.beginFill(0xf06060);\n    g.drawCircle(0, 0, 4);\n    g.endFill();\n    g = keyShape.graphics;\n    g.lineStyle(1, 0x808080);\n    g.drawPath(Vector.<int>([1,2,2]), Vector.<Number>([0,0, 0,24, 5,24]));\n    g.lineStyle(1, 0xc0c0c0);\n    g.drawPath(Vector.<int>([1,2,2]), Vector.<Number>([5,24, 5,-1, 0,-1]));\n    for (tr=0; tr<16; tr++) {\n        rc.setTo(0,tr*28,300,25);\n        keyImage.fillRect(rc, 0xf0f0f0);\n        rc.setTo(375,tr*28,90,25);\n        keyImage.fillRect(rc, 0x202038);\n        for (i=0; i<9; i++) {\n            rc.setTo(302+i*8,tr*28,6,25);\n            keyImage.fillRect(rc, 0x303030);\n        }\n        for (mat.setTo(1,0,0,1,0,tr*28); mat.tx<300; mat.tx+=6) {\n            keyImage.draw(keyShape, mat);\n        }\n        _drawText(keyImage, 375, tr*28-4, \"[TRACK\" + String(tr+1) + \"]\");\n    }\n    g.clear();\n    g.beginFill(0x202020);\n    g.lineStyle(1, 0x404040);\n    g.drawPath(Vector.<int>([1,2,2,2]), Vector.<Number>([0,0, 0,14, 4,14, 4,0]));\n    g.endFill();\n    g.lineStyle(1, 0x808080);\n    g.drawPath(Vector.<int>([1,2,2]), Vector.<Number>([1,0, 1,12, 2,12]));\n    for (i=0,x=0; i<85; i++) {\n        var bwf:int = bw[i%12];\n        noteOnColor[i] = (bwf) ? 0xffccaa : 0xff2222;\n        for (tr=0; tr<16; tr++) {\n            noteOnRect[tr][i] = new Rectangle(x+bwf+1, tr*28, 4-bwf, 24-bwf*10);\n            if (bwf) {\n                mat.ty = tr*28;\n                mat.tx = x+1;\n                keyImage.draw(keyShape, mat);\n            }\n        }\n        x += (bwf == bw[(i+1)%12])?6:3;\n    }\n    with(container.addChild(new Bitmap(keyImage))) { x = 0; y = 20; }\n    with(container.addChild(new Bitmap(keyOnImage))) { x = 0; y = 20; }\n    tempoIndicator.x = 110;\n    tempoIndicator.y = 10;\n    container.addChild(tempoIndicator);\n    container.addEventListener(Event.ENTER_FRAME, draw);\n    container.graphics.beginFill(0x303050);\n    container.graphics.drawRect(0,0,465,20);\n    container.graphics.endFill();\n}\n\n\nfunction reset() : void {\n    var tr:int, nt:int;\n    keyOnImage.fillRect(keyOnImage.rect, 0);\n    for (tr=0; tr<16; tr++) {\n        for (nt=0; nt<128; nt++) {\n            noteOn[tr][nt] = 0;\n            release[tr][nt] = 0;\n        }\n        updatePitchBend(tr, 0);\n        updateModulation(tr, 0);\n        updateExpression(tr, 128);\n        updateSustain(tr, 0);\n        updatePanpod(tr, 64);\n        updateVolume(tr, 128);\n        updateReverb(tr, 0);\n        updateChorus(tr, 0);\n        updateDelay(tr, 0);\n    }\n}\n\n\nfunction _drawText(img:BitmapData, x:Number, y:Number, str:String, scale:Number=1) : void {\n    mat.setTo(scale,0,0,scale,x,y);\n    lbl.text = str;\n    lbl.draw();\n    img.draw(lbl, mat);\n}\n\n\nfunction updateVoiceInformation(midiModule:MIDIModule, tr:int, pn:int, drumMode:int) : void {\n    rc.setTo(375, tr*28+13, 90, 13);\n    keyOnImage.fillRect(rc, 0);\n    if (drumMode) {\n        _drawText(keyOnImage, 375, tr*28+8, String(pn) + \":[DRUM MODE]\");\n    } else {\n        _drawText(keyOnImage, 375, tr*28+8, String(pn) + \":\" + midiModule.voiceSet[pn].name);\n    }\n}\n\n\nfunction updatePitchBend(tr:int, bend:int) : void { _updateBar(tr, 0, (bend>0) ? (-bend*12/8192) : 0, (bend<0) ? (-bend*12/8192) : 1, 13); }\nfunction updateModulation(tr:int, mod:int) : void { _updateBar(tr, 1, -mod*25/128); }\nfunction updateExpression(tr:int, exp:int) : void { _updateBar(tr, 2, -exp*25/128); }\nfunction updateSustain(tr:int, sus:int) : void    { _updateBar(tr, 3, -sus*25/128); }\nfunction updatePanpod(tr:int, pan:int) : void     { _updateBar(tr, 4, (pan>64) ? (-(pan-64)*12/64) : 0, (pan<64) ? (-(pan-64)*12/64) : 1, 13); }\nfunction updateVolume(tr:int, vol:int) : void     { _updateBar(tr, 5, -vol*25/128); }\nfunction updateReverb(tr:int, rev:int) : void     { _updateBar(tr, 6, -rev*25/128); }\nfunction updateChorus(tr:int, cho:int) : void     { _updateBar(tr, 7, -cho*25/128); }\nfunction updateDelay(tr:int, dly:int) : void      { _updateBar(tr, 8, -dly*25/128); }\n\n\nfunction _updateBar(tr:int, index:int, y0:int, y1:int=0, c:int=25) : void {\n    rc.setTo(302+index*8, tr*28, 6, 25);\n    keyOnImage.fillRect(rc, 0);\n    rc.setTo(302+index*8, tr*28+c+y0, 6, y1-y0);\n    keyOnImage.fillRect(rc, 0xff8080a0);\n}\n\nfunction draw(e:Event) : void {\n    rc.setTo(0, 0, 300, 450);\n    keyOnImage.fillRect(rc, 0);\n    for (var tr:int=0; tr<16; tr++) {\n        var n:Vector.<Number> = noteOn[tr],\n            r:Vector.<Number> = release[tr],\n            nr:Vector.<Rectangle> = noteOnRect[tr];\n        for (var i:int=0, j:int=24; i<85; i++, j++) {\n            if (n[j] > 0) {\n                n[j] *= r[j];\n                if (n[j] < 0.01) n[j] = 0;\n                keyOnImage.fillRect(nr[i], ((n[j]*255)<<24)|noteOnColor[i]);\n            }\n        }\n    }\n    tempoIndicator.alpha = tempoIndicatorAlpha;\n    tempoIndicatorAlpha *= 0.9;\n}\n\n","modified_date":1345647256,"compile_ok":"1","created_date":1345566435,"forked_count":"10","license":"MIT","swf":"http://swf.wonderfl.net/swf/usercode/2/21/2116/211612e02329f5d9f5473e9e9580e081e9ca9c89.swf","diff":"0","user":{"icon":"http://wonderfl.net/images/icon/2/27/278a/278afc585a0a283d6e1f13f081cfd9c377ab9db2m","name":"keim_at_Si"},"title":"SiON MIDI Player","id":"4IH3","favorite_count":"17"},"stat":"ok"}