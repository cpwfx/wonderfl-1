{"code":{"thumbnail":"http://wonderfl.net/images/capture/8/84/849c/849c9af95617af375b17fcf6d1d9de27a51149de_100.jpg?t=1329319110","parent":"qTUM","as3":"package {\n    import flash.display.Sprite;\n    import flash.text.TextField;\n    import mx.utils.LinkedListNode;\n    import mx.utils.LinkedList;\n    public class main extends Sprite {\n        public function main() {\n            var linkedList:LinkedList = new LinkedList();\n            var display:Array = [];\n            var headTerminator:LinkedListNode; \n            var tailTerminator:LinkedListNode; \n            var node:LinkedListNode, nextNode:LinkedListNode;\n            \n\n            // 隠しメンバ terminator の取得\n            display.push(\"//----- Get hidden terminator nodes\"); \n            {\n                linkedList.push(\"PUSH DUMMY !!!\");\n                headTerminator = linkedList.head.prev;\n                tailTerminator = linkedList.tail.next;\n                linkedList.pop(); // POP DUMMY !!!\n            }\n            \n            \n            // 要素数＝0 のときの、基本特性\n            display.push(linkedList.length);                        // 0 elements\n            display.push(headTerminator == tailTerminator);         // false (not ring-linked list)\n            display.push(headTerminator == tailTerminator.prev);    // true\n            // ↓重要な特性①\n            display.push(headTerminator.next == tailTerminator);    // true\n            \n            \n            // terminator を使った双方向リストの操作方法\n            display.push(\"//----- basic iteration with terminators\"); \n            {\n                linkedList.push(\"a\");\n                linkedList.push(\"b\");\n                linkedList.push(\"c\");\n                \n                // headTerminator.next が最初のノード\n                node = headTerminator.next;         // headTerminator.next is the first element\n                // node が tailTerminator ならループ終了（重要な特性① のおかげで要素数＝0でも問題なく動作）\n                while (node != tailTerminator) {    // iteration with checking tail terminator\n                    display.push(\"node=\" + node + \" node.value=\" + node.value);\n                    node = node.next;\n                }\n            }\n            \n            \n            // terminator はループ内でノードを削除しても不変（重要な特性②）\n            display.push(\"//----- terminators are stable after removing all elements during an iteration\");\n            {\n                node = headTerminator.next;\n                while (node != tailTerminator) {\n                    display.push(\"[remove] node=\" + node + \" node.value=\" + node.value);\n                    nextNode = node.next;\n                    linkedList.remove(node);\n                    node = nextNode;\n                }\n            }\n            \n            \n            // terminator は不変（重要な特性②）。一度取得しておけば、いつでも再利用可能\n            display.push(\"//----- terminators are reusable whenever, once you get them\");\n            {\n                linkedList.push(\"d\");\n                linkedList.push(\"e\");\n                linkedList.push(\"f\");\n                \n                // for ループなら、こんなにシンプル（重要な特性③）\n                // basic iteration with \"for\" loop\n                for (node = headTerminator.next; node != tailTerminator; node = node.next) {\n                    display.push(\"node=\" + node + \" node.value=\" + node.value);\n                }\n            }\n            \n            \n            var tf:TextField = new TextField();\n            tf.width = 400;\n            tf.height = 400;\n            tf.text = display.join(\"\\n\");\n            addChild(tf);\n        }\n    }\n}","modified_date":1329320022,"compile_ok":"1","created_date":1329301104,"forked_count":"0","license":"MIT","swf":"http://swf.wonderfl.net/swf/usercode/8/84/849c/849c9af95617af375b17fcf6d1d9de27a51149de.swf","diff":"61","user":{"icon":"http://wonderfl.net/images/icon/2/27/278a/278afc585a0a283d6e1f13f081cfd9c377ab9db2m","name":"keim_at_Si"},"title":"隠しメンバ「terminator」を使う。from: mx.utls.LinkedListの使い方が分からない","id":"iV8y","favorite_count":"4"},"stat":"ok"}