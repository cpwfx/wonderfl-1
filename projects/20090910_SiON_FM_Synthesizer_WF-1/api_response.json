{"code":{"thumbnail":"http://wonderfl.net/images/capture/6/6a/6a73/6a738c4f99a6c786421c38b4cce01e73c1c9bb89_100.jpg?t=1348507280","parent":"aolu","as3":"// SiON Keyborad WF1 ver0.58\npackage {\n    import flash.display.Sprite;\n    import flash.events.*;\n    import flash.system.System;\n    import com.bit101.components.*;\n    \n    public class main extends Sprite {\n        function main() {\n            graphics.beginFill(0);\n            graphics.drawRect(0,0,465,465);\n            graphics.endFill();\n            \n            addChild(keyboard = new Sprite());\n            keyboard.x = 0;\n            keyboard.y = 120;\n            \n            keys = new KeyDisplay(keyboard, 32, 54);\n            Style.BACKGROUND = 0x606060;\n            Style.BUTTON_FACE = 0x404040;\n            Style.LABEL_TEXT = 0xaaaaaa;\n            Style.DROPSHADOW = 0;\n            Style.PANEL = 0x202020;\n            Style.PROGRESS_BAR = 0x404040;\n            selector = new VoiceSelector(keyboard, 32, -16);\n            volume = new VolumePanel(keyboard, 32, 78);\n            stage.addEventListener(\"keyDown\", _onKeyDown);\n            stage.addEventListener(\"keyUp\", _onKeyUp);\n\n            var disc:String = \"[ UP / DOWN ] = Change Voice      \";\n            disc += \"[ LEFT / RIGHT ] = Change Categoly      \";\n            disc += \"[ Q / W ] = Octave Shift\";\n            new Label(keyboard, 16, 204, disc);\n            \n            disc = \"[ P ] = Send parameters to clipboard\";\n            clipboard = new Text(keyboard, 16, 230, disc);\n            clipboard.setSize(433, 96);\n            \n            initializeSiON();\n        }\n        \n        private function _onKeyDown(e:KeyboardEvent) : void {\n            var i:int, c:String, mml:String;\n            switch (e.keyCode) {\n            case 40: updateVoice(voiceIndex-1); break;\n            case 38: updateVoice(voiceIndex+1); break;\n            case 37: updateCategoly(categolyIndex-1); break;\n            case 39: updateCategoly(categolyIndex+1); break;\n            default:\n                switch (c = String.fromCharCode(e.charCode)) {\n                case 'q': keys.octDown(); break;\n                case 'w': keys.octUp();   break;\n                case 'p': \n                    mml = voiceList[voiceIndex].getMML(voiceIndex);\n                    clipboard.text = \"[ P ] = Send parameters to clipboard \\n\" + mml.replace(/\\r/g, '');\n                    System.setClipboard(mml);\n                    break;\n                default:  if ((i=\"zsxdcvgbhnjm,l.;/\".indexOf(c)) >= 0) keyOn(i); break;\n                }\n            }\n        }\n        \n        private function _onKeyUp(e:KeyboardEvent) : void {\n            var i:int, c:String = String.fromCharCode(e.charCode);\n            if ((i=\"zsxdcvgbhnjm,l.;/\".indexOf(c)) >= 0) keyOff(i);\n        }\n    }\n}\n\n\n\nimport flash.display.*;\nimport flash.events.*;\nimport flash.filters.*;\nimport flash.text.*;\nimport flash.geom.*;\nimport com.bit101.components.*;\nimport org.si.sion.*;\nimport org.si.sion.effector.*;\nimport org.si.sion.sequencer.SiMMLTrack;\nimport org.si.sion.utils.SiONPresetVoice;\n\n// SiON variables\nvar driver:SiONDriver = new SiONDriver();\nvar presetVoice:SiONPresetVoice = new SiONPresetVoice();\nvar voiceList:Array = presetVoice.categolies[0];\nvar voiceIndex:int = 0;\nvar categolyIndex:int = 0;\nvar delaySendLevel:Number = 0.2;\nvar chorusSendLevel:Number = 0;\nvar lpf:SiCtrlFilterLowPass = new SiCtrlFilterLowPass();\nvar cutoff:Number = 1;\nvar resonance:Number = 0;\n\n// UIs\nvar keyboard:Sprite;\nvar keys:KeyDisplay;\nvar selector:VoiceSelector;\nvar volume:VolumePanel;\nvar keyFlag:int;\nvar clipboard:Text;\n\n// Global Functions\nfunction initializeSiON() : void {\n    // effector setting\n    lpf.control(1, 0);\n    driver.effector.slot0 = [lpf];\n    driver.effector.slot1 = [new SiEffectStereoDelay(200,0.2,false)];\n    driver.effector.slot2 = [new SiEffectStereoChorus(20,0.2,4,20)];\n    \n    // start stream without initializing effectors\n    driver.play(null, false);\n}\n\nfunction updateCategoly(index:int) : void {\n    var imax:int = presetVoice.categolies.length;\n    if (index < 0) index = imax - 1;\n    else if (index >= imax) index = 0;\n    categolyIndex = index;\n    voiceList = presetVoice.categolies[index];\n    selector.onUpdateCategoly();\n    volume.onUpdateCategoly();\n    updateVoice(voiceIndex);\n}\n\nfunction updateVoice(index:int, callFromKnob:Boolean=false) : void {\n    if (voiceList) {\n        if (index < 0) index = 0;\n        else if (index >= voiceList.length) index = voiceList.length - 1;\n        voiceIndex = index;\n        selector.updateName();\n        if (!callFromKnob) volume.updateVoiceIndex();\n    }\n}\n\nfunction keyOn(index:int) : void {\n    if ((keyFlag & (1<<index)) == 0) {\n        keyFlag |= 1<<index;\n        var trk:SiMMLTrack = driver.noteOn(index + keys.octave*12, voiceList[voiceIndex], 0);\n        trk.channel.setStreamSend(1, delaySendLevel);\n        trk.channel.setStreamSend(2, chorusSendLevel);\n        keys.keyOn(index);\n    }\n}\n\nfunction keyOff(index:int) : void {\n    keyFlag &= ~(1<<index);\n    driver.noteOff(index + keys.octave*12);\n    keys.keyOff(index);\n}\n\nfunction allNoteOff() : void {\n    for each (var trk:SiMMLTrack in driver.sequencer.tracks) trk.keyOff();\n}\n\nclass KeyDisplay extends Sprite {\n    private var _screenBitmap:Bitmap;\n    private var _screen:BitmapData = new BitmapData(400, 144, false, 0);\n    private var _cls:BitmapData = new BitmapData(400, 144, false, 0x202020);\n    private var _bkeyBase:BitmapData = new BitmapData(320, 120, true, 0);\n    private var _wkeyPos:Array = [100,120,140,160,180,200,220,240,260,280];\n    private var _bkeyPos:Array = [112,136,172,194,216,252,276];\n    private var _wkeyIndex:Array = [0,2,4,5,7,9,11,12,14,16];\n    private var _bkeyIndex:Array = [1,3,6,8,10,13,15];\n    private var _wkeyPushed:BitmapData = new BitmapData(20, 120, true, 0x808080ff);\n    private var _bkeyPushed:BitmapData = new BitmapData(12, 80, true, 0x408080ff);\n    private var _light:BitmapData = new BitmapData(12, 12, true, 0);\n    private var _keyFlag:int = 0, _newKeyFlag:int = 0x3000000, _padUpdated:Boolean = false;\n    \n    public function get octave() : int { return (_keyFlag>>24)+2; }\n    \n    function KeyDisplay(parent:DisplayObjectContainer, x:Number, y:Number) {\n        this.x = x;\n        this.y = y;\n        parent.addChild(this);\n        _createBitmap();\n        addEventListener(\"enterFrame\", _onEnterFrame);\n        addChild(_screenBitmap = new Bitmap(_screen));\n        stage.addEventListener(\"mouseDown\", _onMouseDown);\n        stage.addEventListener(\"mouseUp\",   _onMouseUp);\n        stage.addEventListener(\"mouseMove\", _onMouseMove);\n    }\n    \n    public function keyOn(index:int)  : void { _newKeyFlag = _newKeyFlag | (1<<index); }\n    public function keyOff(index:int) : void { _newKeyFlag = _newKeyFlag &~(1<<index); }\n    public function octUp() : void { \n        var oct:int = _newKeyFlag >> 24;\n        if (++oct > 6) oct=6;\n        _newKeyFlag = (oct<<24) | (_newKeyFlag & 0xffffff);\n        allNoteOff();\n    }\n    public function octDown() : void { \n        var oct:int = _newKeyFlag >> 24;\n        if (--oct < 0) oct=0;\n        _newKeyFlag = (oct<<24) | (_newKeyFlag & 0xffffff);\n        allNoteOff();\n    }\n    \n    private function _createBitmap() : void {\n        var canvas:Shape = new Shape(), g:Graphics = canvas.graphics, chars:String,\n            i:int, mat:Matrix = new Matrix(), rc:Rectangle = new Rectangle(0,8,8,4), label:Label;\n        parent.addChild(canvas);\n        // white keys\n        g.clear();\n        g.lineStyle(2, 0);\n        mat.createGradientBox(8, 8, Math.PI/2);\n        g.beginGradientFill(\"linear\", [0x404040,0xf0f0f0], [1,1], [0,255], mat);\n        g.drawRoundRect(0,-4,20,124,8);\n        g.endFill();\n        g.lineStyle(4, 0x808080, 0.25);\n        g.drawPath(Vector.<int>([1,2]), Vector.<Number>([0,-4, 0,120]));\n        Style.LABEL_TEXT = 0x666666;\n        label = new Label(null,0,0,\"\");\n        chars = \"Q  ZXCVBNM,./  W\";\n        for (i=0; i<16; i++) {\n            mat.identity();\n            mat.translate(i*20+40, 20);\n            _cls.draw(canvas, mat);\n            label.text = chars.charAt(i);\n            label.draw();\n            mat.translate(4, 96);\n            _cls.draw(label, mat);\n        }\n        // board\n        g.clear();\n        mat.createGradientBox(20, 20, Math.PI/2);\n        g.beginGradientFill(\"linear\", [0,0x404040,0x202020], [1,1,1], [0,192,255], mat);\n        g.drawRect(0,0,400,20);\n        g.endFill();\n        _cls.draw(canvas);\n        // octave\n        label.text = \"oct.\";\n        label.draw();\n        mat.identity();\n        mat.translate(4, 0);\n        _cls.draw(label, mat);\n        for (rc.x=30; rc.x<136; rc.x+=16) _cls.fillRect(rc, 0);\n        g.clear();\n        mat.createGradientBox(8, 8, 0);\n        g.beginGradientFill(\"radial\", [0xff8040,0x800000], [1,0], [0,255], mat);\n        g.drawCircle(6, 6, 8);\n        g.endFill();\n        _light.draw(canvas);\n        // logo\n        label.text = \"SiON FM Synthesizer WF-1\";\n        label.draw();\n        mat.identity();\n        mat.translate(280, -2);\n        _cls.draw(label, mat);\n        // black keys\n        g.clear();\n        g.beginFill(0x808080, 0.25);\n        g.drawPath(Vector.<int>([1,2,2,2]), Vector.<Number>([12,0, 16,0, 18,75, 12,82]));\n        g.endFill();\n        g.lineStyle(2, 0);\n        g.beginFill(0x303030);\n        g.drawRoundRect(0,0,12,80,3);\n        g.endFill();\n        g.lineStyle(3, 0x606060, 0.5);\n        g.drawPath(Vector.<int>([1,2,2]), Vector.<Number>([2,0, 2,73, 8,73]));\n        g.lineStyle(1, 0xc0c0c0, 0.5);\n        g.drawPath(Vector.<int>([1,2,2]), Vector.<Number>([2,0, 2,71, 7,71]));\n        Style.LABEL_TEXT = 0xaaaaaa;\n        label = new Label(null,0,0,\"\");\n        var pos:Array = [-8,14,36,72,96,132,154,176,212,236,272,294,316];\n        chars = \"   SDGHJL;   \";\n        for (i=0; i<pos.length; i++) {\n            mat.identity();\n            mat.translate(pos[i], 0);\n            _bkeyBase.draw(canvas, mat);\n            label.text = chars.charAt(i);\n            label.draw();\n            mat.translate(1, 50);\n            _bkeyBase.draw(label, mat);\n        }\n        // Filter pad\n        label.text = \"Filter\";\n        label.draw();\n        mat.identity();\n        mat.translate(6, 84);\n        _cls.draw(label, mat);\n        _cls.fillRect(new Rectangle(8,104,24,24), 0);\n        \n        parent.removeChild(canvas);\n    }\n    \n    private function _onEnterFrame(e:Event) : void {\n        if (_keyFlag != _newKeyFlag || _padUpdated) {\n            _keyFlag = _newKeyFlag;\n            _padUpdated = false;\n            _screen.copyPixels(_cls, _cls.rect, _cls.rect.topLeft);\n            var i:int, mat:Matrix = new Matrix(1,0,0,1,0,20), pt:Point = new Point(40, 20);\n            for  (i=0; i<_wkeyIndex.length; i++) {\n                if (_keyFlag & (1<<_wkeyIndex[i])) {\n                    mat.tx = _wkeyPos[i];\n                    _screen.draw(_wkeyPushed, mat);\n                }\n            }\n            _screen.copyPixels(_bkeyBase, _bkeyBase.rect, pt);\n            for  (i=0; i<_bkeyIndex.length; i++) {\n                if (_keyFlag & (1<<_bkeyIndex[i])) {\n                    mat.tx = _bkeyPos[i];\n                    _screen.draw(_bkeyPushed, mat);\n                }\n            }\n            pt.x = octave*16-2;\n            pt.y = 6;\n            _screen.copyPixels(_light, _light.rect, pt);\n            pt.x = int(resonance*23) + 4;\n            pt.y = 123 - int(cutoff*23);\n            _screen.copyPixels(_light, _light.rect, pt);\n        }\n    }\n    \n    private var _draggingStart:Point;\n    private function _onMouseDown(e:MouseEvent) : void { \n        if (mouseX>4 && mouseX<36 && mouseY>104 && mouseY<136) {\n            _draggingStart = new Point(mouseX-resonance*50, mouseY+cutoff*50);\n        }\n    }\n    private function _onMouseUp(e:MouseEvent) : void { _draggingStart = null; }\n    private function _onMouseMove(e:MouseEvent) : void {\n        if (_draggingStart) {\n            resonance = (mouseX - _draggingStart.x) * 0.02;\n            if (resonance < 0) resonance = 0;\n            else if (resonance > 0.9) resonance = 0.9;\n            cutoff = (_draggingStart.y - mouseY) * 0.02;\n            if (cutoff < 0) cutoff = 0;\n            else if (cutoff > 1) cutoff = 1;\n            _padUpdated = true;\n            lpf.control(cutoff, resonance);\n        }\n    }\n}\n\nclass VoiceSelector extends Sprite {\n    private var _cursor:Bitmap = new Bitmap(new BitmapData(48, 14, true, 0x408080ff));\n    private var _categolies:Sprite = new Sprite();\n    private var _voiceName:Label;\n    \n    function VoiceSelector(parent:DisplayObjectContainer, x:Number, y:Number) {\n        this.x = x;\n        this.y = y;\n        parent.addChild(this);\n        _categolies.x = 1;\n        _categolies.y = 18;\n        addChild(_categolies);\n        var imax:int = presetVoice.categolies.length, button:PushButton;\n        for (var i:int=0; i<imax; i++) {\n            var list:Array = presetVoice.categolies[i],\n                label:String = (list.name.charAt() == \"v\") ? list.name.substr(9) : list.name;\n            button = new PushButton(_categolies, (i&7)*50, (i>>3)*16, label, _onCategolyPushed);\n            button.setSize(48, 14);\n        }\n    \n        (new PushButton(this,  1, 2, \"-\", function(e:Event) : void { updateVoice(voiceIndex-1); })).setSize(14, 14);\n        (new PushButton(this, 17, 2, \"+\", function(e:Event) : void { updateVoice(voiceIndex+1); })).setSize(14, 14);\n        _categolies.addChild(_cursor);\n        _voiceName = new Label(this, 33, 0, \"SiON preset voices are from VAL-SOUND\");\n        _voiceName.setSize(200, 18);\n    }\n    \n    private function _onCategolyPushed(e:Event) : void {\n        _cursor.x = e.target.x;\n        _cursor.y = e.target.y;\n        updateCategoly(int((_cursor.x+10)*0.02) + (int(_cursor.y>8)<<3));\n    }\n\n    public function updateName() : void {\n        var str:String = (\"00\"+String(voiceIndex+1)).substr(-3,3) + \"; \";\n        str += voiceList[voiceIndex].name;\n        _voiceName.text = str;\n    }\n    \n    public function onUpdateCategoly() : void {\n        _cursor.x = (categolyIndex&7)*50;\n        _cursor.y = (categolyIndex>>3)*16;\n    }\n}\n\nclass VolumePanel extends Sprite {\n    private var _rev:Knob, _cho:Knob, _prg:Knob;\n    function VolumePanel(parent:DisplayObjectContainer, x:Number, y:Number) {\n        this.x = x;\n        this.y = y;\n        parent.addChild(this);\n        _prg = _newKnob(this, 12,   0, \"Voice\",  _onChangeVoice);\n        _rev = _newKnob(this, 372,  0, \"Delay\",  _onChangeEffect);\n        _cho = _newKnob(this, 372, 60, \"Chorus\", _onChangeEffect);\n        _prg.showValue = false;\n        _rev.value = 20;\n        \n        function _newKnob(cont:DisplayObjectContainer, x:Number, y:Number, label:String, cb:Function) : Knob {\n            var ret:Knob = new Knob(cont, x, y, label, cb);\n            ret.radius = 8;\n            return ret;\n        }\n    }\n    \n    public function onUpdateCategoly() : void {\n        _prg.minimum = 0;\n        _prg.maximum = voiceList.length;\n        _prg.value = voiceIndex;\n        _prg.mouseRange = (voiceList.length<20) ? 100 : 200;\n    }\n    \n    public function updateVoiceIndex() : void {\n        _prg.value = voiceIndex;\n    }\n    \n    private function _onChangeVoice(e:Event) : void {\n        updateVoice(int(_prg.value), true);\n    }\n    \n    private function _onChangeEffect(e:Event) : void {\n        delaySendLevel  = _rev.value * 0.01;\n        chorusSendLevel = _cho.value * 0.01;\n    }\n}\n","modified_date":1348507274,"compile_ok":"1","created_date":1252592007,"forked_count":"44","license":"MIT","swf":"http://swf.wonderfl.net/swf/usercode/6/6a/6a73/6a738c4f99a6c786421c38b4cce01e73c1c9bb89.swf","diff":"451","user":{"icon":"http://wonderfl.net/images/icon/2/27/278a/278afc585a0a283d6e1f13f081cfd9c377ab9db2m","name":"keim_at_Si"},"title":"SiON FM Synthesizer WF-1","id":"fbIa","favorite_count":"134"},"stat":"ok"}